{"version":3,"sources":["scripts/onglet1.js","scripts/crossfilter.js","scripts/onglet2.js","scripts/preprocess.js","scripts/onglet3.js","scripts/chord.js","index.js"],"names":["build","div","bounds","d3","select","node","getBoundingClientRect","margin","top","right","bottom","left","width","height","svg","append","attr","csv","d","date","timeParse","Barges","Excursion","Fishing","Merchant","Other","Tanker","Tugs","then","data","keys","columns","slice","color","scaleOrdinal","domain","range","schemeSet2","stackedData","stack","x","scaleTime","extent","call","axisBottom","ticks","text","y","scaleLinear","axisLeft","areaChart","area","y0","y1","selectAll","enter","key","style","highlight","noHighlight","size","_","i","on","removeDuplicate","name","cleanPortName","words","split","forEach","word","index","length","newWord","toLowerCase","letterIndex","letter","match","substring","toUpperCase","join","isPortExcluded","includes","dataPerMonth","dataPerPort","selectWidth","selectHeight","data1","data2","data3","concat","transformDataPorts","transformDataMonths","setHistograms","setStackedBar","map","Map","line","arrivalPort","departurePort","has","set","get","traffic","Array","from","values","sort","a","b","departureDate","Date","setDate","arrivalDate","setMonth","getMonth","sDate","toDateString","month","nb","buildTable","xScale","scaleBand","padding","yScale","max","tickValues","filter","tickFormat","timeFormat","topTraffic","row","selected","classed","port","undefined","selectPort","reset","nbLines","property","html","title","setHistogram","id","hist","histogram","value","thresholds","bins","x0","x1","total","type","subtype","number","subtypes","colors","darker_colors","currSum","entries","color_list","Math","ceil","GLOBAL_VESSEL_TYPE","REGION_NAME","REGION_COLOR","findGlobalVesselType","vesselType","clean","cleanData","element","push","chordMatrix","matrix","departureRegion","arrivalRegion","j","count","reduce","partialSum","v","Number","buildHeatmap","myGroups","preproc","myVars","myColor","transformData","heatmapMap","keyStart","keyStop","current","p","Region","Type","transformedData","rectSelect","rectUnselect","bandwidth","initLegend","drawLegend","region","toFixed","remove","colorScale","defs","linearGradient","tick","nodes","offset","fill","scale","axis","axisRight","innerRadius","outerRadius","res","chord","padAngle","sortSubgroups","descending","links","datum","source","target","console","log","subindex","ribbon","radius","groups","arc","event","highlightGroup","unhighlightGroup","startAngle","PI","showTooltip","unshowTooltip","onglet1","chordData","onglet3","$","click","hasClass","tab","removeClass","addClass"],"mappings":"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B,UAASvC,CAAT,EAAW;AAAE,aAAOe,KAAK,CAACf,CAAD,CAAZ;AAAgB,KANhD,EAOK4B,IAPL,CAOU,UAAS5B,CAAT,EAAW;AAAE,aAAOA,CAAP;AAAS,KAPhC,EAQKF,IARL,CAQU,aARV,EAQyB,MARzB,EASKyC,KATL,CASW,oBATX,EASiC,QATjC,EAUKM,EAVL,CAUQ,WAVR,EAUqBL,SAVrB,EAWKK,EAXL,CAWQ,YAXR,EAWsBJ,WAXtB;AAYC,GA7GH;AA8GD;;AC/HD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"INF8808-Projet.1a3a0130.js","sourceRoot":"..","sourcesContent":["// Source : https://d3-graph-gallery.com/graph/stackedarea_template.html\nexport function build(div) {\n  // set the dimensions and margins of the graph\n  const bounds = d3.select('#stacked-area-chart').node().getBoundingClientRect()\n  var margin = {top: 60, right: 230, bottom: 50, left: 70},\n  width = bounds.width - margin.left - margin.right,\n  height = 800 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = div.select(\"#stacked-area-chart\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  d3.csv('./TRIP_STACK.csv', function(d){\n      return { \n        date : d3.timeParse(\"%Y-%m-%d\")(d.date), \n        Barges : d.Barges, \n        Excursion : d.Excursion,\n        Fishing : d.Fishing,\n        Merchant : d.Merchant,\n        Other : d.Other,\n        'Pleasure Crafts': d['Pleasure Crafts'],\n        Tanker : d.Tanker,\n        Tugs : d.Tugs,\n      }\n  }).then( function(data) {\n    const keys = data.columns.slice(1)  // List of Vessel Types = header of the csv files\n\n    const color = d3.scaleOrdinal()\n      .domain(keys)\n      .range(d3.schemeSet2);\n\n    const stackedData = d3.stack()\n      .keys(keys)\n    (data)\n\n    // Add X axis\n    const x = d3.scaleTime()\n    .domain(d3.extent(data, d => d.date))\n    .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(10))\n\n    // Add X axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height+40 )\n      .text(\"Temps\");\n\n    // Add Y axis\n    const y = d3.scaleLinear()\n      .domain([0, 800])     // TODO : Y Automatique ?\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y).ticks(15))\n\n    // Add Y axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -20 )\n      .text(\"Nombre de navires\")\n      .attr(\"text-anchor\", \"start\")\n\n    // Area generator\n    const areaChart = svg.append('g')\n    const area = d3.area()\n      .x(function(d) { return x(d.data.date); })\n      .y0(function(d) { return y(d[0]); })\n      .y1(function(d) { return y(d[1]); })\n\n    // Show the areas\n    areaChart\n    .selectAll(\"mylayers\")\n    .data(stackedData)\n    .enter()\n    .append(\"path\")\n      .attr(\"class\", function(d) { return \"myArea \" + d.key })\n      .style(\"fill\", function(d) { return color(d.key); })\n      .attr(\"d\", area)\n\n    // What to do when one group is hovered\n    const highlight = function(d){\n      d3.selectAll(\".myArea\").style(\"opacity\", .1)  // reduce opacity of all groups\n      d3.select(\".\"+d).style(\"opacity\", 1)  // expect the one that is hovered\n    }\n\n    // And when it is not hovered anymore\n    const noHighlight = function(){\n      d3.selectAll(\".myArea\").style(\"opacity\", 1)\n    }\n\n    // LEGEND //\n    const size = 20\n    svg.selectAll(\"myrect\")   // Add one dot in the legend for each name.\n      .data(keys)\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", width)\n        .attr(\"y\", function(_,i){ return 10 + i*(size+5)}) // 100 is where the first dot appears. 25 is the distance between dots\n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .attr(\"stroke-width\", 0.5)\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", function(d){ return color(d)})\n        .on(\"mouseover\", highlight)\n        .on(\"mouseleave\", noHighlight)\n\n    svg.selectAll(\"mylabels\")   // Add one dot in the legend for each name.\n      .data(keys)\n      .enter()\n      .append(\"text\")\n        .attr(\"x\", width + size*1.2)\n        .attr(\"y\", function(_,i){ return 10 + i*(size+5) + (size/2)}) // 100 is where the first dot appears. 25 is the distance between dots\n        .style(\"fill\", function(d){ return color(d)})\n        .text(function(d){ return d})\n        .attr(\"text-anchor\", \"left\")\n        .style(\"alignment-baseline\", \"middle\")\n        .on(\"mouseover\", highlight)\n        .on(\"mouseleave\", noHighlight)\n    })\n}\n","// (function(exports){\n//   crossfilter.version = \"1.3.14\";\n//   function crossfilter_identity(d) {\n//     return d;\n//   }\n//   crossfilter.permute = permute;\n  \n//   function permute(array, index) {\n//     for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n//       copy[i] = array[index[i]];\n//     }\n//     return copy;\n//   }\n//   var bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n  \n//   bisect.by = bisect_by;\n  \n//   function bisect_by(f) {\n  \n//     // Locate the insertion point for x in a to maintain sorted order. The\n//     // arguments lo and hi may be used to specify a subset of the array which\n//     // should be considered; by default the entire array is used. If x is already\n//     // present in a, the insertion point will be before (to the left of) any\n//     // existing entries. The return value is suitable for use as the first\n//     // argument to `array.splice` assuming that a is already sorted.\n//     //\n//     // The returned insertion point i partitions the array a into two halves so\n//     // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n//     // a[i:hi] for the right side.\n//     function bisectLeft(a, x, lo, hi) {\n//       while (lo < hi) {\n//         var mid = lo + hi >>> 1;\n//         if (f(a[mid]) < x) lo = mid + 1;\n//         else hi = mid;\n//       }\n//       return lo;\n//     }\n  \n//     // Similar to bisectLeft, but returns an insertion point which comes after (to\n//     // the right of) any existing entries of x in a.\n//     //\n//     // The returned insertion point i partitions the array into two halves so that\n//     // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n//     // a[i:hi] for the right side.\n//     function bisectRight(a, x, lo, hi) {\n//       while (lo < hi) {\n//         var mid = lo + hi >>> 1;\n//         if (x < f(a[mid])) hi = mid;\n//         else lo = mid + 1;\n//       }\n//       return lo;\n//     }\n  \n//     bisectRight.right = bisectRight;\n//     bisectRight.left = bisectLeft;\n//     return bisectRight;\n//   }\n//   var heap = crossfilter.heap = heap_by(crossfilter_identity);\n  \n//   heap.by = heap_by;\n  \n//   function heap_by(f) {\n  \n//     // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n//     // property such that the parent a[lo+i] is always less than or equal to its\n//     // two children: a[lo+2*i+1] and a[lo+2*i+2].\n//     function heap(a, lo, hi) {\n//       var n = hi - lo,\n//           i = (n >>> 1) + 1;\n//       while (--i > 0) sift(a, i, n, lo);\n//       return a;\n//     }\n  \n//     // Sorts the specified array a[lo:hi] in descending order, assuming it is\n//     // already a heap.\n//     function sort(a, lo, hi) {\n//       var n = hi - lo,\n//           t;\n//       while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n//       return a;\n//     }\n  \n//     // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n//     // slice of array a[lo:lo+n]. This method can also be used to update the heap\n//     // incrementally, without incurring the full cost of reconstructing the heap.\n//     function sift(a, i, n, lo) {\n//       var d = a[--lo + i],\n//           x = f(d),\n//           child;\n//       while ((child = i << 1) <= n) {\n//         if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n//         if (x <= f(a[lo + child])) break;\n//         a[lo + i] = a[lo + child];\n//         i = child;\n//       }\n//       a[lo + i] = d;\n//     }\n  \n//     heap.sort = sort;\n//     return heap;\n//   }\n//   var heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n  \n//   heapselect.by = heapselect_by;\n  \n//   function heapselect_by(f) {\n//     var heap = heap_by(f);\n  \n//     // Returns a new array containing the top k elements in the array a[lo:hi].\n//     // The returned array is not sorted, but maintains the heap property. If k is\n//     // greater than hi - lo, then fewer than k elements will be returned. The\n//     // order of elements in a is unchanged by this operation.\n//     function heapselect(a, lo, hi, k) {\n//       var queue = new Array(k = Math.min(hi - lo, k)),\n//           min,\n//           i,\n//           x,\n//           d;\n  \n//       for (i = 0; i < k; ++i) queue[i] = a[lo++];\n//       heap(queue, 0, k);\n  \n//       if (lo < hi) {\n//         min = f(queue[0]);\n//         do {\n//           if (x = f(d = a[lo]) > min) {\n//             queue[0] = d;\n//             min = f(heap(queue, 0, k)[0]);\n//           }\n//         } while (++lo < hi);\n//       }\n  \n//       return queue;\n//     }\n  \n//     return heapselect;\n//   }\n//   var insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n  \n//   insertionsort.by = insertionsort_by;\n  \n//   function insertionsort_by(f) {\n  \n//     function insertionsort(a, lo, hi) {\n//       for (var i = lo + 1; i < hi; ++i) {\n//         for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n//           a[j] = a[j - 1];\n//         }\n//         a[j] = t;\n//       }\n//       return a;\n//     }\n  \n//     return insertionsort;\n//   }\n//   // Algorithm designed by Vladimir Yaroslavskiy.\n//   // Implementation based on the Dart project; see lib/dart/LICENSE for details.\n  \n//   var quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n  \n//   quicksort.by = quicksort_by;\n  \n//   function quicksort_by(f) {\n//     var insertionsort = insertionsort_by(f);\n  \n//     function sort(a, lo, hi) {\n//       return (hi - lo < quicksort_sizeThreshold\n//           ? insertionsort\n//           : quicksort)(a, lo, hi);\n//     }\n  \n//     function quicksort(a, lo, hi) {\n//       // Compute the two pivots by looking at 5 elements.\n//       var sixth = (hi - lo) / 6 | 0,\n//           i1 = lo + sixth,\n//           i5 = hi - 1 - sixth,\n//           i3 = lo + hi - 1 >> 1,  // The midpoint.\n//           i2 = i3 - sixth,\n//           i4 = i3 + sixth;\n  \n//       var e1 = a[i1], x1 = f(e1),\n//           e2 = a[i2], x2 = f(e2),\n//           e3 = a[i3], x3 = f(e3),\n//           e4 = a[i4], x4 = f(e4),\n//           e5 = a[i5], x5 = f(e5);\n  \n//       var t;\n  \n//       // Sort the selected 5 elements using a sorting network.\n//       if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n//       if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n//       if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n//       if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n//       if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n//       if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n//       if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n//       if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n//       if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n  \n//       var pivot1 = e2, pivotValue1 = x2,\n//           pivot2 = e4, pivotValue2 = x4;\n  \n//       // e2 and e4 have been saved in the pivot variables. They will be written\n//       // back, once the partitioning is finished.\n//       a[i1] = e1;\n//       a[i2] = a[lo];\n//       a[i3] = e3;\n//       a[i4] = a[hi - 1];\n//       a[i5] = e5;\n  \n//       var less = lo + 1,   // First element in the middle partition.\n//           great = hi - 2;  // Last element in the middle partition.\n  \n//       // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n//       // Object.prototype.valueOf; == and === do not, so in order to be consistent\n//       // with natural order (such as for Date objects), we must do two compares.\n//       var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n//       if (pivotsEqual) {\n  \n//         // Degenerated case where the partitioning becomes a dutch national flag\n//         // problem.\n//         //\n//         // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n//         //  ^             ^          ^             ^            ^\n//         // left         less         k           great         right\n//         //\n//         // a[left] and a[right] are undefined and are filled after the\n//         // partitioning.\n//         //\n//         // Invariants:\n//         //   1) for x in ]left, less[ : x < pivot.\n//         //   2) for x in [less, k[ : x == pivot.\n//         //   3) for x in ]great, right[ : x > pivot.\n//         for (var k = less; k <= great; ++k) {\n//           var ek = a[k], xk = f(ek);\n//           if (xk < pivotValue1) {\n//             if (k !== less) {\n//               a[k] = a[less];\n//               a[less] = ek;\n//             }\n//             ++less;\n//           } else if (xk > pivotValue1) {\n  \n//             // Find the first element <= pivot in the range [k - 1, great] and\n//             // put [:ek:] there. We know that such an element must exist:\n//             // When k == less, then el3 (which is equal to pivot) lies in the\n//             // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n//             // Note that in the latter case invariant 2 will be violated for a\n//             // short amount of time. The invariant will be restored when the\n//             // pivots are put into their final positions.\n//             while (true) {\n//               var greatValue = f(a[great]);\n//               if (greatValue > pivotValue1) {\n//                 great--;\n//                 // This is the only location in the while-loop where a new\n//                 // iteration is started.\n//                 continue;\n//               } else if (greatValue < pivotValue1) {\n//                 // Triple exchange.\n//                 a[k] = a[less];\n//                 a[less++] = a[great];\n//                 a[great--] = ek;\n//                 break;\n//               } else {\n//                 a[k] = a[great];\n//                 a[great--] = ek;\n//                 // Note: if great < k then we will exit the outer loop and fix\n//                 // invariant 2 (which we just violated).\n//                 break;\n//               }\n//             }\n//           }\n//         }\n//       } else {\n  \n//         // We partition the list into three parts:\n//         //  1. < pivot1\n//         //  2. >= pivot1 && <= pivot2\n//         //  3. > pivot2\n//         //\n//         // During the loop we have:\n//         // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n//         //  ^            ^                        ^              ^             ^\n//         // left         less                     k              great        right\n//         //\n//         // a[left] and a[right] are undefined and are filled after the\n//         // partitioning.\n//         //\n//         // Invariants:\n//         //   1. for x in ]left, less[ : x < pivot1\n//         //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n//         //   3. for x in ]great, right[ : x > pivot2\n//         for (var k = less; k <= great; k++) {\n//           var ek = a[k], xk = f(ek);\n//           if (xk < pivotValue1) {\n//             if (k !== less) {\n//               a[k] = a[less];\n//               a[less] = ek;\n//             }\n//             ++less;\n//           } else {\n//             if (xk > pivotValue2) {\n//               while (true) {\n//                 var greatValue = f(a[great]);\n//                 if (greatValue > pivotValue2) {\n//                   great--;\n//                   if (great < k) break;\n//                   // This is the only location inside the loop where a new\n//                   // iteration is started.\n//                   continue;\n//                 } else {\n//                   // a[great] <= pivot2.\n//                   if (greatValue < pivotValue1) {\n//                     // Triple exchange.\n//                     a[k] = a[less];\n//                     a[less++] = a[great];\n//                     a[great--] = ek;\n//                   } else {\n//                     // a[great] >= pivot1.\n//                     a[k] = a[great];\n//                     a[great--] = ek;\n//                   }\n//                   break;\n//                 }\n//               }\n//             }\n//           }\n//         }\n//       }\n  \n//       // Move pivots into their final positions.\n//       // We shrunk the list from both sides (a[left] and a[right] have\n//       // meaningless values in them) and now we move elements from the first\n//       // and third partition into these locations so that we can store the\n//       // pivots.\n//       a[lo] = a[less - 1];\n//       a[less - 1] = pivot1;\n//       a[hi - 1] = a[great + 1];\n//       a[great + 1] = pivot2;\n  \n//       // The list is now partitioned into three partitions:\n//       // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n//       //  ^            ^                        ^             ^\n//       // left         less                     great        right\n  \n//       // Recursive descent. (Don't include the pivot values.)\n//       sort(a, lo, less - 1);\n//       sort(a, great + 2, hi);\n  \n//       if (pivotsEqual) {\n//         // All elements in the second partition are equal to the pivot. No\n//         // need to sort them.\n//         return a;\n//       }\n  \n//       // In theory it should be enough to call _doSort recursively on the second\n//       // partition.\n//       // The Android source however removes the pivot elements from the recursive\n//       // call if the second partition is too large (more than 2/3 of the list).\n//       if (less < i1 && great > i5) {\n//         var lessValue, greatValue;\n//         while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n//         while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n  \n//         // Copy paste of the previous 3-way partitioning with adaptions.\n//         //\n//         // We partition the list into three parts:\n//         //  1. == pivot1\n//         //  2. > pivot1 && < pivot2\n//         //  3. == pivot2\n//         //\n//         // During the loop we have:\n//         // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n//         //              ^                      ^              ^\n//         //            less                     k              great\n//         //\n//         // Invariants:\n//         //   1. for x in [ *, less[ : x == pivot1\n//         //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n//         //   3. for x in ]great, * ] : x == pivot2\n//         for (var k = less; k <= great; k++) {\n//           var ek = a[k], xk = f(ek);\n//           if (xk <= pivotValue1 && xk >= pivotValue1) {\n//             if (k !== less) {\n//               a[k] = a[less];\n//               a[less] = ek;\n//             }\n//             less++;\n//           } else {\n//             if (xk <= pivotValue2 && xk >= pivotValue2) {\n//               while (true) {\n//                 var greatValue = f(a[great]);\n//                 if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n//                   great--;\n//                   if (great < k) break;\n//                   // This is the only location inside the loop where a new\n//                   // iteration is started.\n//                   continue;\n//                 } else {\n//                   // a[great] < pivot2.\n//                   if (greatValue < pivotValue1) {\n//                     // Triple exchange.\n//                     a[k] = a[less];\n//                     a[less++] = a[great];\n//                     a[great--] = ek;\n//                   } else {\n//                     // a[great] == pivot1.\n//                     a[k] = a[great];\n//                     a[great--] = ek;\n//                   }\n//                   break;\n//                 }\n//               }\n//             }\n//           }\n//         }\n//       }\n  \n//       // The second partition has now been cleared of pivot elements and looks\n//       // as follows:\n//       // [  *  |  > pivot1 && < pivot2  | * ]\n//       //        ^                      ^\n//       //       less                  great\n//       // Sort the second partition using recursive descent.\n  \n//       // The second partition looks as follows:\n//       // [  *  |  >= pivot1 && <= pivot2  | * ]\n//       //        ^                        ^\n//       //       less                    great\n//       // Simply sort it by recursive descent.\n  \n//       return sort(a, less, great + 1);\n//     }\n  \n//     return sort;\n//   }\n  \n//   var quicksort_sizeThreshold = 32;\n//   var crossfilter_array8 = crossfilter_arrayUntyped,\n//       crossfilter_array16 = crossfilter_arrayUntyped,\n//       crossfilter_array32 = crossfilter_arrayUntyped,\n//       crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n//       crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n  \n//   if (typeof Uint8Array !== \"undefined\") {\n//     crossfilter_array8 = function(n) { return new Uint8Array(n); };\n//     crossfilter_array16 = function(n) { return new Uint16Array(n); };\n//     crossfilter_array32 = function(n) { return new Uint32Array(n); };\n  \n//     crossfilter_arrayLengthen = function(array, length) {\n//       if (array.length >= length) return array;\n//       var copy = new array.constructor(length);\n//       copy.set(array);\n//       return copy;\n//     };\n  \n//     crossfilter_arrayWiden = function(array, width) {\n//       var copy;\n//       switch (width) {\n//         case 16: copy = crossfilter_array16(array.length); break;\n//         case 32: copy = crossfilter_array32(array.length); break;\n//         default: throw new Error(\"invalid array width!\");\n//       }\n//       copy.set(array);\n//       return copy;\n//     };\n//   }\n  \n//   function crossfilter_arrayUntyped(n) {\n//     var array = new Array(n), i = -1;\n//     while (++i < n) array[i] = 0;\n//     return array;\n//   }\n  \n//   function crossfilter_arrayLengthenUntyped(array, length) {\n//     var n = array.length;\n//     while (n < length) array[n++] = 0;\n//     return array;\n//   }\n  \n//   function crossfilter_arrayWidenUntyped(array, width) {\n//     if (width > 32) throw new Error(\"invalid array width!\");\n//     return array;\n//   }\n//   function crossfilter_filterExact(bisect, value) {\n//     return function(values) {\n//       var n = values.length;\n//       return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n//     };\n//   }\n  \n//   function crossfilter_filterRange(bisect, range) {\n//     var min = range[0],\n//         max = range[1];\n//     return function(values) {\n//       var n = values.length;\n//       return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n//     };\n//   }\n  \n//   function crossfilter_filterAll(values) {\n//     return [0, values.length];\n//   }\n//   function crossfilter_null() {\n//     return null;\n//   }\n//   function crossfilter_zero() {\n//     return 0;\n//   }\n//   function crossfilter_reduceIncrement(p) {\n//     return p + 1;\n//   }\n  \n//   function crossfilter_reduceDecrement(p) {\n//     return p - 1;\n//   }\n  \n//   function crossfilter_reduceAdd(f) {\n//     return function(p, v) {\n//       return p + +f(v);\n//     };\n//   }\n  \n//   function crossfilter_reduceSubtract(f) {\n//     return function(p, v) {\n//       return p - f(v);\n//     };\n//   }\n//   exports.crossfilter = crossfilter;\n  \n//   function crossfilter() {\n//     var crossfilter = {\n//       add: add,\n//       remove: removeData,\n//       dimension: dimension,\n//       groupAll: groupAll,\n//       size: size\n//     };\n  \n//     var data = [], // the records\n//         n = 0, // the number of records; data.length\n//         m = 0, // a bit mask representing which dimensions are in use\n//         M = 8, // number of dimensions that can fit in `filters`\n//         filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n//         filterListeners = [], // when the filters change\n//         dataListeners = [], // when data is added\n//         removeDataListeners = []; // when data is removed\n  \n//     // Adds the specified new records to this crossfilter.\n//     function add(newData) {\n//       var n0 = n,\n//           n1 = newData.length;\n  \n//       // If there's actually new data to add…\n//       // Merge the new data into the existing data.\n//       // Lengthen the filter bitset to handle the new records.\n//       // Notify listeners (dimensions and groups) that new data is available.\n//       if (n1) {\n//         data = data.concat(newData);\n//         filters = crossfilter_arrayLengthen(filters, n += n1);\n//         dataListeners.forEach(function(l) { l(newData, n0, n1); });\n//       }\n  \n//       return crossfilter;\n//     }\n  \n//     // Removes all records that match the current filters.\n//     function removeData() {\n//       var newIndex = crossfilter_index(n, n),\n//           removed = [];\n//       for (var i = 0, j = 0; i < n; ++i) {\n//         if (filters[i]) newIndex[i] = j++;\n//         else removed.push(i);\n//       }\n  \n//       // Remove all matching records from groups.\n//       filterListeners.forEach(function(l) { l(0, [], removed); });\n  \n//       // Update indexes.\n//       removeDataListeners.forEach(function(l) { l(newIndex); });\n  \n//       // Remove old filters and data by overwriting.\n//       for (var i = 0, j = 0, k; i < n; ++i) {\n//         if (k = filters[i]) {\n//           if (i !== j) filters[j] = k, data[j] = data[i];\n//           ++j;\n//         }\n//       }\n//       data.length = j;\n//       while (n > j) filters[--n] = 0;\n//     }\n  \n//     // Adds a new dimension with the specified value accessor function.\n//     function dimension(value) {\n//       var dimension = {\n//         filter: filter,\n//         filterExact: filterExact,\n//         filterRange: filterRange,\n//         filterFunction: filterFunction,\n//         filterAll: filterAll,\n//         top: top,\n//         bottom: bottom,\n//         group: group,\n//         groupAll: groupAll,\n//         dispose: dispose,\n//         remove: dispose // for backwards-compatibility\n//       };\n  \n//       var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n//           zero = ~one, // inverted one, e.g., 11110111\n//           values, // sorted, cached array\n//           index, // value rank ↦ object id\n//           newValues, // temporary array storing newly-added values\n//           newIndex, // temporary array storing newly-added index\n//           sort = quicksort_by(function(i) { return newValues[i]; }),\n//           refilter = crossfilter_filterAll, // for recomputing filter\n//           refilterFunction, // the custom filter function in use\n//           indexListeners = [], // when data is added\n//           dimensionGroups = [],\n//           lo0 = 0,\n//           hi0 = 0;\n  \n//       // Updating a dimension is a two-stage process. First, we must update the\n//       // associated filters for the newly-added records. Once all dimensions have\n//       // updated their filters, the groups are notified to update.\n//       dataListeners.unshift(preAdd);\n//       dataListeners.push(postAdd);\n  \n//       removeDataListeners.push(removeData);\n  \n//       // Incorporate any existing data into this dimension, and make sure that the\n//       // filter bitset is wide enough to handle the new dimension.\n//       m |= one;\n//       if (M >= 32 ? !one : m & -(1 << M)) {\n//         filters = crossfilter_arrayWiden(filters, M <<= 1);\n//       }\n//       preAdd(data, 0, n);\n//       postAdd(data, 0, n);\n  \n//       // Incorporates the specified new records into this dimension.\n//       // This function is responsible for updating filters, values, and index.\n//       function preAdd(newData, n0, n1) {\n  \n//         // Permute new values into natural order using a sorted index.\n//         newValues = newData.map(value);\n//         newIndex = sort(crossfilter_range(n1), 0, n1);\n//         newValues = permute(newValues, newIndex);\n  \n//         // Bisect newValues to determine which new records are selected.\n//         var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n//         if (refilterFunction) {\n//           for (i = 0; i < n1; ++i) {\n//             if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n//           }\n//         } else {\n//           for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n//           for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n//         }\n  \n//         // If this dimension previously had no data, then we don't need to do the\n//         // more expensive merge operation; use the new values and index as-is.\n//         if (!n0) {\n//           values = newValues;\n//           index = newIndex;\n//           lo0 = lo1;\n//           hi0 = hi1;\n//           return;\n//         }\n  \n//         var oldValues = values,\n//             oldIndex = index,\n//             i0 = 0,\n//             i1 = 0;\n  \n//         // Otherwise, create new arrays into which to merge new and old.\n//         values = new Array(n);\n//         index = crossfilter_index(n, n);\n  \n//         // Merge the old and new sorted values, and old and new index.\n//         for (i = 0; i0 < n0 && i1 < n1; ++i) {\n//           if (oldValues[i0] < newValues[i1]) {\n//             values[i] = oldValues[i0];\n//             index[i] = oldIndex[i0++];\n//           } else {\n//             values[i] = newValues[i1];\n//             index[i] = newIndex[i1++] + n0;\n//           }\n//         }\n  \n//         // Add any remaining old values.\n//         for (; i0 < n0; ++i0, ++i) {\n//           values[i] = oldValues[i0];\n//           index[i] = oldIndex[i0];\n//         }\n  \n//         // Add any remaining new values.\n//         for (; i1 < n1; ++i1, ++i) {\n//           values[i] = newValues[i1];\n//           index[i] = newIndex[i1] + n0;\n//         }\n  \n//         // Bisect again to recompute lo0 and hi0.\n//         bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n//       }\n  \n//       // When all filters have updated, notify index listeners of the new values.\n//       function postAdd(newData, n0, n1) {\n//         indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n//         newValues = newIndex = null;\n//       }\n  \n//       function removeData(reIndex) {\n//         for (var i = 0, j = 0, k; i < n; ++i) {\n//           if (filters[k = index[i]]) {\n//             if (i !== j) values[j] = values[i];\n//             index[j] = reIndex[k];\n//             ++j;\n//           }\n//         }\n//         values.length = j;\n//         while (j < n) index[j++] = 0;\n  \n//         // Bisect again to recompute lo0 and hi0.\n//         var bounds = refilter(values);\n//         lo0 = bounds[0], hi0 = bounds[1];\n//       }\n  \n//       // Updates the selected values based on the specified bounds [lo, hi].\n//       // This implementation is used by all the public filter methods.\n//       function filterIndexBounds(bounds) {\n//         var lo1 = bounds[0],\n//             hi1 = bounds[1];\n  \n//         if (refilterFunction) {\n//           refilterFunction = null;\n//           filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n//           lo0 = lo1;\n//           hi0 = hi1;\n//           return dimension;\n//         }\n  \n//         var i,\n//             j,\n//             k,\n//             added = [],\n//             removed = [];\n  \n//         // Fast incremental update based on previous lo index.\n//         if (lo1 < lo0) {\n//           for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n//             filters[k = index[i]] ^= one;\n//             added.push(k);\n//           }\n//         } else if (lo1 > lo0) {\n//           for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n//             filters[k = index[i]] ^= one;\n//             removed.push(k);\n//           }\n//         }\n  \n//         // Fast incremental update based on previous hi index.\n//         if (hi1 > hi0) {\n//           for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n//             filters[k = index[i]] ^= one;\n//             added.push(k);\n//           }\n//         } else if (hi1 < hi0) {\n//           for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n//             filters[k = index[i]] ^= one;\n//             removed.push(k);\n//           }\n//         }\n  \n//         lo0 = lo1;\n//         hi0 = hi1;\n//         filterListeners.forEach(function(l) { l(one, added, removed); });\n//         return dimension;\n//       }\n  \n//       // Filters this dimension using the specified range, value, or null.\n//       // If the range is null, this is equivalent to filterAll.\n//       // If the range is an array, this is equivalent to filterRange.\n//       // Otherwise, this is equivalent to filterExact.\n//       function filter(range) {\n//         return range == null\n//             ? filterAll() : Array.isArray(range)\n//             ? filterRange(range) : typeof range === \"function\"\n//             ? filterFunction(range)\n//             : filterExact(range);\n//       }\n  \n//       // Filters this dimension to select the exact value.\n//       function filterExact(value) {\n//         return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n//       }\n  \n//       // Filters this dimension to select the specified range [lo, hi].\n//       // The lower bound is inclusive, and the upper bound is exclusive.\n//       function filterRange(range) {\n//         return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n//       }\n  \n//       // Clears any filters on this dimension.\n//       function filterAll() {\n//         return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n//       }\n  \n//       // Filters this dimension using an arbitrary function.\n//       function filterFunction(f) {\n//         refilter = crossfilter_filterAll;\n  \n//         filterIndexFunction(refilterFunction = f);\n  \n//         lo0 = 0;\n//         hi0 = n;\n  \n//         return dimension;\n//       }\n  \n//       function filterIndexFunction(f) {\n//         var i,\n//             k,\n//             x,\n//             added = [],\n//             removed = [];\n  \n//         for (i = 0; i < n; ++i) {\n//           if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n//             if (x) filters[k] &= zero, added.push(k);\n//             else filters[k] |= one, removed.push(k);\n//           }\n//         }\n//         filterListeners.forEach(function(l) { l(one, added, removed); });\n//       }\n  \n//       // Returns the top K selected records based on this dimension's order.\n//       // Note: observes this dimension's filter, unlike group and groupAll.\n//       function top(k) {\n//         var array = [],\n//             i = hi0,\n//             j;\n  \n//         while (--i >= lo0 && k > 0) {\n//           if (!filters[j = index[i]]) {\n//             array.push(data[j]);\n//             --k;\n//           }\n//         }\n  \n//         return array;\n//       }\n  \n//       // Returns the bottom K selected records based on this dimension's order.\n//       // Note: observes this dimension's filter, unlike group and groupAll.\n//       function bottom(k) {\n//         var array = [],\n//             i = lo0,\n//             j;\n  \n//         while (i < hi0 && k > 0) {\n//           if (!filters[j = index[i]]) {\n//             array.push(data[j]);\n//             --k;\n//           }\n//           i++;\n//         }\n  \n//         return array;\n//       }\n  \n//       // Adds a new group to this dimension, using the specified key function.\n//       function group(key) {\n//         var group = {\n//           top: top,\n//           all: all,\n//           reduce: reduce,\n//           reduceCount: reduceCount,\n//           reduceSum: reduceSum,\n//           order: order,\n//           orderNatural: orderNatural,\n//           size: size,\n//           dispose: dispose,\n//           remove: dispose // for backwards-compatibility\n//         };\n  \n//         // Ensure that this group will be removed when the dimension is removed.\n//         dimensionGroups.push(group);\n  \n//         var groups, // array of {key, value}\n//             groupIndex, // object id ↦ group id\n//             groupWidth = 8,\n//             groupCapacity = crossfilter_capacity(groupWidth),\n//             k = 0, // cardinality\n//             select,\n//             heap,\n//             reduceAdd,\n//             reduceRemove,\n//             reduceInitial,\n//             update = crossfilter_null,\n//             reset = crossfilter_null,\n//             resetNeeded = true,\n//             groupAll = key === crossfilter_null;\n  \n//         if (arguments.length < 1) key = crossfilter_identity;\n  \n//         // The group listens to the crossfilter for when any dimension changes, so\n//         // that it can update the associated reduce values. It must also listen to\n//         // the parent dimension for when data is added, and compute new keys.\n//         filterListeners.push(update);\n//         indexListeners.push(add);\n//         removeDataListeners.push(removeData);\n  \n//         // Incorporate any existing data into the grouping.\n//         add(values, index, 0, n);\n  \n//         // Incorporates the specified new values into this group.\n//         // This function is responsible for updating groups and groupIndex.\n//         function add(newValues, newIndex, n0, n1) {\n//           var oldGroups = groups,\n//               reIndex = crossfilter_index(k, groupCapacity),\n//               add = reduceAdd,\n//               initial = reduceInitial,\n//               k0 = k, // old cardinality\n//               i0 = 0, // index of old group\n//               i1 = 0, // index of new record\n//               j, // object id\n//               g0, // old group\n//               x0, // old key\n//               x1, // new key\n//               g, // group to add\n//               x; // key of group to add\n  \n//           // If a reset is needed, we don't need to update the reduce values.\n//           if (resetNeeded) add = initial = crossfilter_null;\n  \n//           // Reset the new groups (k is a lower bound).\n//           // Also, make sure that groupIndex exists and is long enough.\n//           groups = new Array(k), k = 0;\n//           groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n  \n//           // Get the first old key (x0 of g0), if it exists.\n//           if (k0) x0 = (g0 = oldGroups[0]).key;\n  \n//           // Find the first new key (x1), skipping NaN keys.\n//           while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n  \n//           // While new keys remain…\n//           while (i1 < n1) {\n  \n//             // Determine the lesser of the two current keys; new and old.\n//             // If there are no old keys remaining, then always add the new key.\n//             if (g0 && x0 <= x1) {\n//               g = g0, x = x0;\n  \n//               // Record the new index of the old group.\n//               reIndex[i0] = k;\n  \n//               // Retrieve the next old key.\n//               if (g0 = oldGroups[++i0]) x0 = g0.key;\n//             } else {\n//               g = {key: x1, value: initial()}, x = x1;\n//             }\n  \n//             // Add the lesser group.\n//             groups[k] = g;\n  \n//             // Add any selected records belonging to the added group, while\n//             // advancing the new key and populating the associated group index.\n//             while (!(x1 > x)) {\n//               groupIndex[j = newIndex[i1] + n0] = k;\n//               if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n//               if (++i1 >= n1) break;\n//               x1 = key(newValues[i1]);\n//             }\n  \n//             groupIncrement();\n//           }\n  \n//           // Add any remaining old groups that were greater than all new keys.\n//           // No incremental reduce is needed; these groups have no new records.\n//           // Also record the new index of the old group.\n//           while (i0 < k0) {\n//             groups[reIndex[i0] = k] = oldGroups[i0++];\n//             groupIncrement();\n//           }\n  \n//           // If we added any new groups before any old groups,\n//           // update the group index of all the old records.\n//           if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n//             groupIndex[i0] = reIndex[groupIndex[i0]];\n//           }\n  \n//           // Modify the update and reset behavior based on the cardinality.\n//           // If the cardinality is less than or equal to one, then the groupIndex\n//           // is not needed. If the cardinality is zero, then there are no records\n//           // and therefore no groups to update or reset. Note that we also must\n//           // change the registered listener to point to the new method.\n//           j = filterListeners.indexOf(update);\n//           if (k > 1) {\n//             update = updateMany;\n//             reset = resetMany;\n//           } else {\n//             if (!k && groupAll) {\n//               k = 1;\n//               groups = [{key: null, value: initial()}];\n//             }\n//             if (k === 1) {\n//               update = updateOne;\n//               reset = resetOne;\n//             } else {\n//               update = crossfilter_null;\n//               reset = crossfilter_null;\n//             }\n//             groupIndex = null;\n//           }\n//           filterListeners[j] = update;\n  \n//           // Count the number of added groups,\n//           // and widen the group index as needed.\n//           function groupIncrement() {\n//             if (++k === groupCapacity) {\n//               reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n//               groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n//               groupCapacity = crossfilter_capacity(groupWidth);\n//             }\n//           }\n//         }\n  \n//         function removeData() {\n//           if (k > 1) {\n//             var oldK = k,\n//                 oldGroups = groups,\n//                 seenGroups = crossfilter_index(oldK, oldK);\n  \n//             // Filter out non-matches by copying matching group index entries to\n//             // the beginning of the array.\n//             for (var i = 0, j = 0; i < n; ++i) {\n//               if (filters[i]) {\n//                 seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n//                 ++j;\n//               }\n//             }\n  \n//             // Reassemble groups including only those groups that were referred\n//             // to by matching group index entries.  Note the new group index in\n//             // seenGroups.\n//             groups = [], k = 0;\n//             for (i = 0; i < oldK; ++i) {\n//               if (seenGroups[i]) {\n//                 seenGroups[i] = k++;\n//                 groups.push(oldGroups[i]);\n//               }\n//             }\n  \n//             if (k > 1) {\n//               // Reindex the group index using seenGroups to find the new index.\n//               for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n//             } else {\n//               groupIndex = null;\n//             }\n//             filterListeners[filterListeners.indexOf(update)] = k > 1\n//                 ? (reset = resetMany, update = updateMany)\n//                 : k === 1 ? (reset = resetOne, update = updateOne)\n//                 : reset = update = crossfilter_null;\n//           } else if (k === 1) {\n//             if (groupAll) return;\n//             for (var i = 0; i < n; ++i) if (filters[i]) return;\n//             groups = [], k = 0;\n//             filterListeners[filterListeners.indexOf(update)] =\n//             update = reset = crossfilter_null;\n//           }\n//         }\n  \n//         // Reduces the specified selected or deselected records.\n//         // This function is only used when the cardinality is greater than 1.\n//         function updateMany(filterOne, added, removed) {\n//           if (filterOne === one || resetNeeded) return;\n  \n//           var i,\n//               k,\n//               n,\n//               g;\n  \n//           // Add the added values.\n//           for (i = 0, n = added.length; i < n; ++i) {\n//             if (!(filters[k = added[i]] & zero)) {\n//               g = groups[groupIndex[k]];\n//               g.value = reduceAdd(g.value, data[k]);\n//             }\n//           }\n  \n//           // Remove the removed values.\n//           for (i = 0, n = removed.length; i < n; ++i) {\n//             if ((filters[k = removed[i]] & zero) === filterOne) {\n//               g = groups[groupIndex[k]];\n//               g.value = reduceRemove(g.value, data[k]);\n//             }\n//           }\n//         }\n  \n//         // Reduces the specified selected or deselected records.\n//         // This function is only used when the cardinality is 1.\n//         function updateOne(filterOne, added, removed) {\n//           if (filterOne === one || resetNeeded) return;\n  \n//           var i,\n//               k,\n//               n,\n//               g = groups[0];\n  \n//           // Add the added values.\n//           for (i = 0, n = added.length; i < n; ++i) {\n//             if (!(filters[k = added[i]] & zero)) {\n//               g.value = reduceAdd(g.value, data[k]);\n//             }\n//           }\n  \n//           // Remove the removed values.\n//           for (i = 0, n = removed.length; i < n; ++i) {\n//             if ((filters[k = removed[i]] & zero) === filterOne) {\n//               g.value = reduceRemove(g.value, data[k]);\n//             }\n//           }\n//         }\n  \n//         // Recomputes the group reduce values from scratch.\n//         // This function is only used when the cardinality is greater than 1.\n//         function resetMany() {\n//           var i,\n//               g;\n  \n//           // Reset all group values.\n//           for (i = 0; i < k; ++i) {\n//             groups[i].value = reduceInitial();\n//           }\n  \n//           // Add any selected records.\n//           for (i = 0; i < n; ++i) {\n//             if (!(filters[i] & zero)) {\n//               g = groups[groupIndex[i]];\n//               g.value = reduceAdd(g.value, data[i]);\n//             }\n//           }\n//         }\n  \n//         // Recomputes the group reduce values from scratch.\n//         // This function is only used when the cardinality is 1.\n//         function resetOne() {\n//           var i,\n//               g = groups[0];\n  \n//           // Reset the singleton group values.\n//           g.value = reduceInitial();\n  \n//           // Add any selected records.\n//           for (i = 0; i < n; ++i) {\n//             if (!(filters[i] & zero)) {\n//               g.value = reduceAdd(g.value, data[i]);\n//             }\n//           }\n//         }\n  \n//         // Returns the array of group values, in the dimension's natural order.\n//         function all() {\n//           if (resetNeeded) reset(), resetNeeded = false;\n//           return groups;\n//         }\n  \n//         // Returns a new array containing the top K group values, in reduce order.\n//         function top(k) {\n//           var top = select(all(), 0, groups.length, k);\n//           return heap.sort(top, 0, top.length);\n//         }\n  \n//         // Sets the reduce behavior for this group to use the specified functions.\n//         // This method lazily recomputes the reduce values, waiting until needed.\n//         function reduce(add, remove, initial) {\n//           reduceAdd = add;\n//           reduceRemove = remove;\n//           reduceInitial = initial;\n//           resetNeeded = true;\n//           return group;\n//         }\n  \n//         // A convenience method for reducing by count.\n//         function reduceCount() {\n//           return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n//         }\n  \n//         // A convenience method for reducing by sum(value).\n//         function reduceSum(value) {\n//           return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n//         }\n  \n//         // Sets the reduce order, using the specified accessor.\n//         function order(value) {\n//           select = heapselect_by(valueOf);\n//           heap = heap_by(valueOf);\n//           function valueOf(d) { return value(d.value); }\n//           return group;\n//         }\n  \n//         // A convenience method for natural ordering by reduce value.\n//         function orderNatural() {\n//           return order(crossfilter_identity);\n//         }\n  \n//         // Returns the cardinality of this group, irrespective of any filters.\n//         function size() {\n//           return k;\n//         }\n  \n//         // Removes this group and associated event listeners.\n//         function dispose() {\n//           var i = filterListeners.indexOf(update);\n//           if (i >= 0) filterListeners.splice(i, 1);\n//           i = indexListeners.indexOf(add);\n//           if (i >= 0) indexListeners.splice(i, 1);\n//           i = removeDataListeners.indexOf(removeData);\n//           if (i >= 0) removeDataListeners.splice(i, 1);\n//           return group;\n//         }\n  \n//         return reduceCount().orderNatural();\n//       }\n  \n//       // A convenience function for generating a singleton group.\n//       function groupAll() {\n//         var g = group(crossfilter_null), all = g.all;\n//         delete g.all;\n//         delete g.top;\n//         delete g.order;\n//         delete g.orderNatural;\n//         delete g.size;\n//         g.value = function() { return all()[0].value; };\n//         return g;\n//       }\n  \n//       // Removes this dimension and associated groups and event listeners.\n//       function dispose() {\n//         dimensionGroups.forEach(function(group) { group.dispose(); });\n//         var i = dataListeners.indexOf(preAdd);\n//         if (i >= 0) dataListeners.splice(i, 1);\n//         i = dataListeners.indexOf(postAdd);\n//         if (i >= 0) dataListeners.splice(i, 1);\n//         i = removeDataListeners.indexOf(removeData);\n//         if (i >= 0) removeDataListeners.splice(i, 1);\n//         m &= zero;\n//         return filterAll();\n//       }\n  \n//       return dimension;\n//     }\n  \n//     // A convenience method for groupAll on a dummy dimension.\n//     // This implementation can be optimized since it always has cardinality 1.\n//     function groupAll() {\n//       var group = {\n//         reduce: reduce,\n//         reduceCount: reduceCount,\n//         reduceSum: reduceSum,\n//         value: value,\n//         dispose: dispose,\n//         remove: dispose // for backwards-compatibility\n//       };\n  \n//       var reduceValue,\n//           reduceAdd,\n//           reduceRemove,\n//           reduceInitial,\n//           resetNeeded = true;\n  \n//       // The group listens to the crossfilter for when any dimension changes, so\n//       // that it can update the reduce value. It must also listen to the parent\n//       // dimension for when data is added.\n//       filterListeners.push(update);\n//       dataListeners.push(add);\n  \n//       // For consistency; actually a no-op since resetNeeded is true.\n//       add(data, 0, n);\n  \n//       // Incorporates the specified new values into this group.\n//       function add(newData, n0) {\n//         var i;\n  \n//         if (resetNeeded) return;\n  \n//         // Add the added values.\n//         for (i = n0; i < n; ++i) {\n//           if (!filters[i]) {\n//             reduceValue = reduceAdd(reduceValue, data[i]);\n//           }\n//         }\n//       }\n  \n//       // Reduces the specified selected or deselected records.\n//       function update(filterOne, added, removed) {\n//         var i,\n//             k,\n//             n;\n  \n//         if (resetNeeded) return;\n  \n//         // Add the added values.\n//         for (i = 0, n = added.length; i < n; ++i) {\n//           if (!filters[k = added[i]]) {\n//             reduceValue = reduceAdd(reduceValue, data[k]);\n//           }\n//         }\n  \n//         // Remove the removed values.\n//         for (i = 0, n = removed.length; i < n; ++i) {\n//           if (filters[k = removed[i]] === filterOne) {\n//             reduceValue = reduceRemove(reduceValue, data[k]);\n//           }\n//         }\n//       }\n  \n//       // Recomputes the group reduce value from scratch.\n//       function reset() {\n//         var i;\n  \n//         reduceValue = reduceInitial();\n  \n//         for (i = 0; i < n; ++i) {\n//           if (!filters[i]) {\n//             reduceValue = reduceAdd(reduceValue, data[i]);\n//           }\n//         }\n//       }\n  \n//       // Sets the reduce behavior for this group to use the specified functions.\n//       // This method lazily recomputes the reduce value, waiting until needed.\n//       function reduce(add, remove, initial) {\n//         reduceAdd = add;\n//         reduceRemove = remove;\n//         reduceInitial = initial;\n//         resetNeeded = true;\n//         return group;\n//       }\n  \n//       // A convenience method for reducing by count.\n//       function reduceCount() {\n//         return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n//       }\n  \n//       // A convenience method for reducing by sum(value).\n//       function reduceSum(value) {\n//         return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n//       }\n  \n//       // Returns the computed reduce value.\n//       function value() {\n//         if (resetNeeded) reset(), resetNeeded = false;\n//         return reduceValue;\n//       }\n  \n//       // Removes this group and associated event listeners.\n//       function dispose() {\n//         var i = filterListeners.indexOf(update);\n//         if (i >= 0) filterListeners.splice(i);\n//         i = dataListeners.indexOf(add);\n//         if (i >= 0) dataListeners.splice(i);\n//         return group;\n//       }\n  \n//       return reduceCount();\n//     }\n  \n//     // Returns the number of records in this crossfilter, irrespective of any filters.\n//     function size() {\n//       return n;\n//     }\n  \n//     return arguments.length\n//         ? add(arguments[0])\n//         : crossfilter;\n//   }\n  \n//   // Returns an array of size n, big enough to store ids up to m.\n//   function crossfilter_index(n, m) {\n//     return (m < 0x101\n//         ? crossfilter_array8 : m < 0x10001\n//         ? crossfilter_array16\n//         : crossfilter_array32)(n);\n//   }\n  \n//   // Constructs a new array of size n, with sequential values from 0 to n - 1.\n//   function crossfilter_range(n) {\n//     var range = crossfilter_index(n, n);\n//     for (var i = -1; ++i < n;) range[i] = i;\n//     return range;\n//   }\n  \n//   function crossfilter_capacity(w) {\n//     return w === 8\n//         ? 0x100 : w === 16\n//         ? 0x10000\n//         : 0x100000000;\n//   }\n//   })(typeof exports !== 'undefined' && exports || this);","import { crossfilter } from './crossfilter'\n\nexport function removeDuplicate(name) {\n    if (name == 'Saint John NB') {\n        return \"St. John's\"\n    }\n    return name\n}\n\nexport function cleanPortName(name) {\n    name = removeDuplicate(name)\n    const words = name.split(/,| |\\/|-/)\n    words.forEach((word, index) => {\n        if (word.length > 2) {\n            let newWord = word.toLowerCase()\n\n            let letterIndex = 0\n            while (true) {\n                const letter = newWord[letterIndex]\n                if (letter.match(/[a-z]/i)) {\n                    newWord = newWord.substring(0, letterIndex) + letter.toUpperCase() + newWord.substring(letterIndex + 1)\n                    break\n                }\n                letterIndex += 1\n            }\n            words[index] = newWord\n        }\n    })\n    return words.join(' ')\n}\n\nexport function isPortExcluded(name) {\n    if (name.includes('Virtual Harbour')) {\n        return true\n    }\n    return false\n}\n\nlet dataPerMonth\nlet dataPerPort\nlet data\n\nconst selectWidth = 950\nconst selectHeight = 125\n\n// Reading the data\nd3.csv(\"./TRIP_Part1.csv\").then( function(data1) {\n    d3.csv(\"./TRIP_Part2.csv\").then( function(data2) {\n        d3.csv(\"./TRIP_Part3.csv\").then( function(data3) {\n            // Id,Departure Date,Departure Hardour,Departure Region,Departure Latitude,Departure Longitude,Arrival Date,Arrival Hardour,Arrival Region,Arrival Latitude,Arrival Longitude,Vessel Type,Lenght,Width,DeadWeight Tonnage,Maximum Draugth\n            // 6079000000783579,    2011-01-01 00:00:00.000,Virtual Harbour (Central Region),Central Region,45.71666667,-84.24861111,2011-01-01 15:30:00.000,Goderich,Central Region,43.745,-81.7294441666667,Merchant Bulk,222.509994506836,22.9400005340576,31751,8.72999954223633\n            // 23079000000766048,   2011-01-01 00:10:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,2011-01-01 01:00:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,Tug Fire,38.9000015258789,13.8999996185303,314,3.5\n            // 23079000000766035,   2011-01-01 00:57:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,2011-01-02 12:45:00.000,Virtual Harbour (Newfoundland Region),Newfoundland Region,47.75,-53,Merchant Crude,271.799987792969,46.0499992370606,126646,15.3459997177124\n\n            data = data1.concat(data2).concat(data3)\n\n            dataPerPort = transformDataPorts(data)\n            dataPerMonth = transformDataMonths(data)\n\n            setHistograms(data)\n            setStackedBar(data)\n\n            build(d3.select('#tab-2-content'), dataPerMonth, dataPerPort)\n        });\n    });\n});\n\nexport function transformDataPorts(data) {\n    const map = new Map()\n    data.forEach(line => {\n        const arrivalPort = cleanPortName(line['Arrival Hardour'])\n        const departurePort = cleanPortName(line['Departure Hardour'])\n\n        if (!isPortExcluded(arrivalPort)) {\n            if (!map.has(arrivalPort)) {\n                map.set(arrivalPort, {\n                    'name': arrivalPort,\n                    'traffic': 1\n                })\n            } else {\n                map.get(arrivalPort).traffic += 1\n            }\n        }\n\n        if (!isPortExcluded(departurePort)) {\n            if (!map.has(departurePort)) {\n                map.set(departurePort, {\n                    'name': departurePort,\n                    'traffic': 1\n                })\n            } else {\n                map.get(departurePort).traffic += 1\n            }\n        }\n    })\n\n    const dataPerPort = Array.from(map.values())\n    dataPerPort.sort(function (a, b) {\n        return b.traffic - a.traffic\n    })\n    return dataPerPort\n}\n\nexport function transformDataMonths(data) {\n    const map = new Map()\n    data.forEach(line => {\n        const departureDate = new Date(line['Departure Date'])\n        departureDate.setDate(1)\n        const arrivalDate = new Date(line['Arrival Date'])\n        arrivalDate.setDate(1)\n\n        for (let date = departureDate; date <= arrivalDate; date.setMonth(date.getMonth()+1)) {\n            const sDate = date.toDateString()\n            if (!map.has(sDate)) {\n                map.set(sDate, {\n                    'date': sDate,\n                    'traffic': 1\n                })\n            } else {\n                map.get(sDate).traffic += 1\n            }\n        }\n    })\n\n    const dataPerMonth = Array.from(map.values())\n    dataPerMonth.forEach(month => {\n        month.date = new Date(month.date)\n    })\n    return dataPerMonth\n}\n\nexport function build(div, dataPerMonth, dataPerPort, nb = 20) {\n    buildTable(div, dataPerPort, nb)\n\n    const xScale = d3.scaleBand().padding(0.7)\n    xScale.domain(\n        dataPerMonth.map((month) => month.date))\n    .range([0, 950])\n\n    const yScale = d3.scaleLinear()\n    let max = 0\n    for (const month of dataPerMonth) {\n        if (month.traffic > max) {\n            max = month.traffic\n        }\n    }\n    yScale.domain([0, max]).range([125, 0])\n\n    div.select('#time-select-graph  #graph-clip-path')\n    .selectAll('rect')\n    .data(dataPerMonth)\n    .join('rect')\n    .attr('width', 950 / dataPerMonth.length)\n    .attr('height', data => 125 - yScale(data.traffic))\n    .attr('x', data => xScale(data.date))\n    .attr('y', data => yScale(data.traffic))\n\n    div.select('#time-select-graph')\n    .select('.x.axis')\n    .attr('transform', 'translate(0, ' + 125 + ')')\n    .call(d3.axisBottom(xScale)\n    .tickValues(xScale.domain().filter(function(d, i) {\n        return !(i % 12 - 1)\n    }))\n    .tickFormat(d3.timeFormat(\"%Y\")))\n}\n\nexport function buildTable(div, dataPerPort, nb) {\n    const topTraffic = dataPerPort[0].traffic\n\n    const row = div.select('#port-table tbody')\n    .selectAll('tr.port-row')\n    .data(dataPerPort)\n    .enter()\n    .filter((data, index) => nb <= 0 || index < nb)\n    .append('tr')\n    .attr('data-port', (data, index) => data.name)\n\n    row.append('td')\n    .attr('class', 'port-cell column-rank')\n    .append('div')\n    .attr('class', 'rank-container')\n    .append('span')\n    .text((data, index) => index + 1)\n\n    row.append('td')\n    .attr('class', 'port-cell column-port')\n    .append('div')\n    .attr('class', 'port-container')\n    .append('span')\n    .text((data, index) => data.name)\n\n    row.append('td')\n    .attr('class', 'port-cell column-traffic')\n    .append('div')\n    .attr('class', 'traffic-container')\n    .append('span')\n    .text((data, index) => data.traffic)\n\n    row.append('td')\n    .attr('class', 'port-cell-graph column-proportions')\n    .append('div')\n    .attr('class', 'proportions-container')\n    .style('width', (data, index) => data.traffic / topTraffic * 100 + '%')\n    \n    div.selectAll('#port-table tr').on('click', function() {\n        const row = d3.select(this)\n        const selected = row.classed('selected')\n\n        d3.selectAll('#port-table tr').classed('selected', false)\n        row.classed('selected', !selected)\n\n        const port = selected ? undefined : row.attr('data-port')\n\n        selectPort(port)\n    })\n}\n\nd3.select('#tab-2-content #row-nb-control-refresh').on('click', function() {\n    reset(d3.select('#tab-2-content'))\n    const nbLines = d3.select('#row-nb-control').property('value')\n    build(d3.select('#tab-2-content'), dataPerMonth, dataPerPort, nbLines)\n})\n\nexport function reset(div) {\n    div.select('#port-table tbody').html('')\n    selectPort(undefined)\n}\n\nexport function selectPort(port) {\n    const title = d3.select('#caracteristics-title-port')\n    if (port == undefined) {\n        title.text('AUCUN PORT SÉLECTIONNÉ - CARACTÉRISTIQUES GLOBALES')\n    } else {\n        title.text(port)\n    }\n}\n\nexport function setHistogram(data, max, width, height, id, title) {\n    var svg = d3.select(id)\n        .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(50,10)\");\n\n    var x = d3.scaleLinear()\n        .domain([0, max])\n        .range([0, width - 100]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + (height - 30) + \")\")\n        .call(d3.axisBottom(x))\n\n    var hist = d3.histogram()\n        .value(d => { return d[title]; })\n        .domain(x.domain())\n        .thresholds(x.ticks(40));\n\n    var bins = hist(data);\n\n    var y = d3.scaleLinear()\n        .range([height - 30, 0])\n        .domain([0, d3.max(bins, d => { return d.length; })]);\n    svg.append(\"g\")\n        .call(d3.axisLeft(y).ticks(5));\n\n    svg.selectAll(\"rect\")\n        .data(bins)\n        .enter()\n        .append(\"rect\")\n            .attr(\"x\", 1)\n            .attr(\"transform\", d => { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n            .attr(\"width\", d => { return x(d.x1) - x(d.x0); })\n            .attr(\"height\", d => { return height - y(d.length) - 30; })\n            .style(\"fill\", \"#4479AB\")\n}\n\nexport function setHistograms(data) {\n    setHistogram(data, 400, 776, 160, \"#repartition-length\", \"Lenght\");\n    setHistogram(data, 180, 776, 160, \"#repartition-width\", \"Width\")\n    setHistogram(data, 650000, 776, 160, \"#repartition-tonnage\", \"DeadWeight Tonnage\");\n    setHistogram(data, 30, 776, 160, \"#repartition-draught\", \"Maximum Draugth\");\n}\n\nexport function setStackedBar(data) {\n    var svg = d3.select(\"#repartition-types\")\n        .append(\"svg\")\n            .attr(\"height\", 556)\n            .attr(\"width\", 130)\n            .append(\"g\")\n                .attr(\"transform\", \"translate(10,10)\");\n    \n    var total = 0\n    const map = new Map()\n    data.forEach(line => {\n        const type = line['Global Vessel Type']\n        const subtype = line['Vessel Type']\n        total++;\n\n        if (!map.has(type)) {\n            map.set(type, {\n                'type': type,\n                'number': 1,\n                'subtypes': {}\n            })\n        } else {\n            map.get(type).number += 1;\n        }\n            \n        if (!(subtype in map.get(type).subtypes)) {\n            map.get(type).subtypes[subtype] = 1;\n        } else {\n            map.get(type).subtypes[subtype] += 1;\n        }\n    })\n\n    const colors = {\"Barges\": \"#66c2a5\", \"Excursion\": \"#fc8d62\", \"Fishing\": \"#8da0cb\", \"Merchant\": \"#e78ac3\", \"Other\": \"#a6d854\", \"Pleasure Crafts\": \"#ffd92f\", \"Tanker\": \"#e5c494\", \"Tugs\": \"#b3b3b3\"}\n    const darker_colors = {\"Barges\": \"#46b08f\", \"Excursion\": \"#d66236\", \"Fishing\": \"#748cc2\", \"Merchant\": \"#d96aae\", \"Other\": \"#8fbd44\", \"Pleasure Crafts\": \"#d6b313\", \"Tanker\": \"#cfa569\", \"Tugs\": \"#919191\"}\n\n    var currSum = 10\n    for (var type of map.entries()) {\n        var i = 0\n        for (var subtype in type[1].subtypes) {\n            var color_list = i % 2 == 0 ? colors : darker_colors\n            i++\n            svg.append(\"rect\")\n                .attr(\"width\", 130)\n                .attr(\"height\", (Math.ceil(490 * type[1].subtypes[subtype]/total)))\n                .attr(\"transform\", \"translate(10,\" + currSum + \")\")\n                .attr(\"fill\", color_list[type[0]]);\n            currSum += Math.ceil(490 * type[1].subtypes[subtype]/total);\n        }\n    }\n}","export const GLOBAL_VESSEL_TYPE = ['Barges', 'Excursion', 'Fishing', 'Merchant', 'Other', 'Pleasure Crafts', 'Tanker', 'Tugs']\nexport const REGION_NAME = ['Arctic', 'Central', 'East Canadian Water', 'Newfoundland', 'Maritimes', 'Pacific', 'Quebec', 'St. Lawrence Seaway', 'West Canadian Water']\nexport const REGION_COLOR = ['#CAB2D6', '#6A3D9A', '#33A02C', '#FB9A99', '#FDBF6F', '#E31A1C', '#1F78B4', '#A6CEE3', '#FF7F00']\n\nfunction findGlobalVesselType(vesselType) {\n  if (['Barge Bulk Cargo', 'Barge Chemical','Barge Chips','Barge Derrick','Barge General','Barge Log','Barge Miscellaneous','Barge Oil Drilling Rig', 'Barge Oil/Petroleum', 'Barge Rail/Trailer','Barge Self-Propelled','Barge Towed',\"Don't use\",'Landing Craft','Logs Raft Section'].includes(vesselType)) {\n    return 'Barges'\n  } else if (['Excursion Passenger'].includes(vesselType)) {\n    return 'Excursion'\n  } else if (['Crab Boat', 'Dragger (Scallop, Clam, etc.)', 'Factory Ship', 'Fishery Patrol', 'Fishing Vessel', 'Gillnetter', 'Groundfish Boat (Open Boat)', 'Lobster Boat', 'Longliner', 'Other Fishing VSL (Open Boat)', 'Seiner', 'Shrimp Boat', 'Trawler', 'Troller'].includes(vesselType)) {\n    return 'Fishing'\n  } else if (['Cruise', 'Merchant (Dry)', 'Merchant Auto', 'Merchant Bulk', 'Merchant Cement', 'Merchant Coastal', 'Merchant Container', 'Merchant Ferry', 'Merchant General', 'Merchant Lash', 'Merchant Livestock', 'Merchant Ore', 'Merchant Passenger', 'Merchant Rail/Trailer Ferry', 'Merchant Reefer', 'Merchant RO/RO'].includes(vesselType)) {\n    return 'Merchant'\n  } else if (['Yacht - Pleasure Crafts', 'Yacht Power', 'Yacht Sails'].includes(vesselType)) {\n    return 'Pleasure Crafts'\n  } else if(['Merchant (Tanker)', 'Merchant Chemical', 'Merchant Chemical/Oil Products Tanker','Merchant Crude','Merchant Gasoline','Merchant Liquified Gas','Merchant Molasses','Merchant Ore/Bulk/Oil','Merchant Super Tanker','Merchant ULCC','Merchant VLCC','Merchant Water'].includes(vesselType)) {\n    return 'Tanker'\n  } else if (['Tug', 'Tug Fire', 'Tug Harbour', 'Tug Ocean', 'Tug Supply', 'Tugs Workboat'].includes(vesselType)) {\n    return 'Tugs'\n  } else {\n    return 'Other'\n  }\n}\n\nexport function clean(data) {\n  const cleanData = []\n  data.forEach(element => {\n    if (element['Lenght'] != 0 && \n        element['Width'] != 0 & \n        element['Maximum Draugth'] < 30 &&\n        element['Departure Date'] < ['Arrival Date']) {\n      cleanData.push({\n        'Arrival Date': element['Arrival Date'].substring(0,10),\n        'Arrival Hardour': element['Arrival Hardour'],\n        'Arrival Region': element['Arrival Region'],\n        'DeadWeight Tonnage': element['DeadWeight Tonnage'],\n        'Departure Date': element['Departure Date'].substring(0, 10),\n        'Departure Hardour': element['Departure Hardour'],\n        'Departure Region': element['Departure Region'],\n        'Lenght': element['Lenght'],\n        'Maximum Draugth': element['Maximum Draugth'],\n        'Vessel Type': element['Vessel Type'],\n        'Global Vessel Type': findGlobalVesselType(element['Vessel Type']),\n        'Width': element['Width']\n      })\n    }\n  })\n\n  return cleanData\n}\n\nexport function chordMatrix(data, departureDate, arrivalDate) {\n  const matrix = new Array(REGION_NAME.length)\n  for (let index = 0; index < matrix.length; index++) {\n    matrix[index] = new Array(REGION_NAME.length)\n  }\n  \n  REGION_NAME.forEach((departureRegion, i) => {\n    REGION_NAME.forEach((arrivalRegion, j) => {\n      matrix[i][j] = data\n        .filter((d) => {\n          return departureRegion === d['Departure Region'].slice(0,-7)\n            && arrivalRegion === d['Arrival Region'].slice(0,-7)\n            && departureDate <= d['Departure Date']\n            && arrivalDate >= d['Arrival Date']\n        })\n        .map((value) => value.count)\n        .reduce((partialSum, v) => Number(partialSum) + Number(v), 0)\n    })\n  })\n\n  return matrix\n}","import * as preproc from './preprocess.js'\n\nexport function build(div) {\n  buildHeatmap(div)\n}\n\n// https://d3-graph-gallery.com/heatmap.html\nfunction buildHeatmap(div) {\n  // TODO : adapt to div size\n\n  // set the dimensions and margins of the graph\n  const margin = {top: 30, right: 0, bottom: 70, left: 120},\n    width = 500 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  const svg = div.select(\"#tab-3-heatmap\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right + 50)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  // Labels of row and columns\n  const myGroups = preproc.GLOBAL_VESSEL_TYPE\n  const myVars = preproc.REGION_NAME\n\n  // Build X scales and axis:\n  const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(myGroups)\n    .padding(0.01)\n\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x))\n    .selectAll('text')\n    .attr('transform', 'translate(-20,20)rotate(-45)')\n\n  // Build Y scales and axis:\n  const y = d3.scaleBand()\n    .range([ height, 0 ])\n    .domain(myVars)\n    .padding(0.01)\n  svg.append(\"g\")\n    .call(d3.axisLeft(y))\n\n  // Build color scale\n  const myColor = d3.scaleLinear()\n    .range([\"white\", \"#ff0000\"])\n    .domain([0,15]) //maximum hardocodé sur la valeur max\n\n\n  function transformData(d, departureDate, arrivalDate) {\n    let map = heatmapMap()\n\n    d.forEach(line => {\n      if (departureDate <= d['Departure Date'] && arrivalDate >= d['Arrival Date']) return;\n\n      const keyStart = line['Departure Region']+line['Global Vessel Type'];\n      const keyStop = line['Arrival Region']+line['Global Vessel Type'];\n      if (!map.has(keyStart)) {\n        map.set(keyStart, {\n          'Region': line['Departure Region'].slice(0,-7),\n          'Type': line['Global Vessel Type'],\n          'count': 1\n          });\n      } else {\n        const current = map.get(keyStart);\n        current.count += 1;\n        map.set(keyStart, current);\n      }\n      if (!map.has(keyStop)) {\n        map.set(keyStop, {\n          'Region': line['Arrival Region'].slice(0,-7),\n          'Type': line['Global Vessel Type'],\n          'count': 1\n          });\n      } else {\n        const current = map.get(keyStop);\n        current.count += 1;\n        map.set(keyStop, current);\n      }\n    })\n\n    const p = [];\n    let max = 0\n    Array.from(map.values()).forEach((value) => {\n      p.push({\n        'Region': value.Region,\n        'Type': value.Type,\n        'count' : (value.count / (2*311859)) * 100    // TODO : Trouver le nombre total de voyage dans la période sélectionnée\n      })\n      if ((value.count / (2*311859)) * 100 >= max) {\n        max = (value.count / (2*311859)) * 100\n      }\n    })\n    myColor.domain([0,max])\n\n    return p\n  }\n\n  //Read the data\n  d3.csv(\"./TRIP_HEATMAP.csv\").then( function(data) {\n    // add the squares and interaction\n    const transformedData = transformData(data, \"2010-01-01\", \"2023-01-01\")\n    svg.selectAll()\n    .data(transformedData, function(d) {\n      return d.Type+':'+d.Region;\n    })\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"square\")\n    .on('mouseenter', function() { rectSelect(this, x, y) })\n    .on('mouseleave', function() { rectUnselect(this) })\n    .append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.Type) })\n      .attr(\"y\", function(d) { return y(d.Region) })\n      .attr(\"width\", x.bandwidth() )\n      .attr(\"height\", y.bandwidth() )\n      .style(\"fill\", function(d) { return myColor(d.count) })\n    \n      initLegend(svg,myColor)\n      drawLegend(width + margin.right + 10, 0, height, 15, 'url(#gradient)', myColor)\n  })\n}\n\nfunction heatmapMap() {\n  let map = new Map();\n\n  preproc.REGION_NAME.forEach((region) => {\n    preproc.GLOBAL_VESSEL_TYPE.forEach((type) => {\n      const key = region + type\n      map.set(key, {\n        'Region': region,\n        'Type': type,\n        'count': 0\n      })\n    })\n  })\n  return map\n}\n\nfunction rectSelect(element, x, y) {\n  d3.select(element)\n    .append(\"text\")\n    .attr('x', function(d) { return x(d.Type) + x.bandwidth() / 2; })\n    .attr('y', function(d) { return y(d.Region) + y.bandwidth() / 2; })\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .text(function(d) {\n      return d.count.toFixed(2) + '%'\n    })\n}\n\nfunction rectUnselect(element) {\n  d3.select(element)\n    .select('text')\n    .remove()\n}\n\nfunction initLegend(svg, colorScale) {\n  const defs = svg.append('defs')\n  svg.append('rect').attr('class', 'legend bar')\n  svg.append('g').attr('class', 'legend axis')\n\n  const linearGradient = defs\n  .append('linearGradient')\n  .attr('id', 'gradient')\n  .attr('x1', 0).attr('y1', 1).attr('x2', 0).attr('y2', 0)\n\n  linearGradient.selectAll('stop')\n  .data(colorScale.ticks().map((tick, i, nodes) => (\n    {\n      offset: `${ (100*i / nodes.length)}%`,\n      color: colorScale(tick)\n    })))\n  .join('stop')\n  .attr('offset', d => d.offset)\n  .attr('stop-color', d => d.color)\n}\n\nfunction drawLegend(x, y, height, width, fill, colorScale) {\n  d3.select('.legend.bar')\n    .attr('fill', fill)\n    .attr('x', x)\n    .attr('y', y)\n    .attr('height', height)\n    .attr('width', width)\n    \n  const scale = d3.scaleLinear()\n  .domain(colorScale.domain())\n  .range([height, 0])\n\n  let axis = d3.axisRight()\n  .ticks(7)\n  .scale(scale);\n\n  d3.select('.legend.axis')\n  .call(axis)\n  .attr('transform', 'translate('+ (x+15) + ',' + y + ')')\n}\n","import * as preproc from './preprocess.js'\n\n// https://d3-graph-gallery.com/chord.html\n// https://observablehq.com/@d3/directed-chord-diagram\n// https://jyu-theartofml.github.io/posts/circos_plot\n// http://strongriley.github.io/d3/ex/chord.html\nexport function build(div, data) {\n  // TODO : Comment trouver la taille d'une div encore non chargée ?\n  const bounds = d3.select('#stacked-area-chart').node().getBoundingClientRect()\n\n  var margin = {\n    top: Math.max(bounds.width*0.22, 400), \n    right: bounds.width*0.25, \n    bottom: bounds.width*0.25, \n    left: bounds.width*0.25\n  }, // TODO : Revoir valeur\n  width = bounds.width - margin.left - margin.right,\n  height = bounds.width - margin.top - margin.bottom;\n\n  const innerRadius = bounds.width / 6.5 // TODO : Revoir valeur\n  const outerRadius = innerRadius + 10\n\n  // create the svg area\n  const svg = div.select('#tab-3-chord-diagram')\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // create input data: a square matrix that provides flow between entities\n  const matrix = preproc.chordMatrix(data, \"2010-01-01\", \"2023-01-01\")\n  \n  const colors = preproc.REGION_COLOR\n\n  // give this matrix to d3.chord(): it will calculates all the info we need to draw arc and ribbon\n  const res = d3.chord()\n    .padAngle(0.05)     // padding between entities (black arc)\n    .sortSubgroups(d3.descending)\n    (matrix)\n\n  // add the links between groups\n  const links = svg\n  .datum(res)\n  .append(\"g\")\n  .attr(\"id\", \"links\")\n  .selectAll(\"path\")\n  .data(function(d) { return d; })\n  .enter()\n  .append(\"path\")\n    .attr(\"class\", \"chord\")\n    .on('mouseenter', function({source, target}, _) {\n      console.log(`${preproc.REGION_NAME[source.index]} --> ${preproc.REGION_NAME[source.subindex]} : ${source.value} navires`)\n    })\n    .attr(\"d\", d3.ribbon()\n      .radius(innerRadius)\n    )\n    .style(\"fill\", function(d){ return(colors[d.source.index]) }) // colors depend on the source group. Change to target otherwise.\n    .style(\"stroke\", \"black\")\n    .attr(\"opacity\", 0.5)\n\n  // Version sans ticks :\n  // add the groups on the outer part of the circle\n  svg.datum(res)\n    .append(\"g\")\n    .attr(\"id\", \"groups\")\n    .selectAll(\"g\")\n    .data(function(d) { return d.groups; })\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"group\")\n    .append(\"path\")\n      .style(\"fill\", function(_,i){ return colors[i] })\n      .style(\"stroke\", \"black\")\n      .attr(\"d\", d3.arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n      )\n      .on(\"mouseover\", function(event, _) {\n        console.log(`Région ${preproc.REGION_NAME[event.index]} (${event.value} navires)`)\n        highlightGroup(event, links)\n      })\n      .on(\"mouseleave\", function() {\n        unhighlightGroup(links)\n      })\n\n  // add the label of groups\n  svg.datum(res)\n    .append(\"g\")\n    .attr(\"id\", \"labels\")\n    .selectAll(\"text\")\n    .data(function(d) { return d.groups; })\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.startAngle * 180 / Math.PI - 90) + \") translate(\" + outerRadius + \",0)\"; })  // TODO : Revoir valeur\n    .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.startAngle > Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.startAngle > Math.PI ? \"end\" : null; })\n    .style(\"fill\", function(_, i){ return(colors[i]) })\n    .style(\"font-weight\", \"bold\")\n    .text(function(d) { return preproc.REGION_NAME[d.index] })\n\n  /* \n  // Version avec ticks :\n  // this group object use each group of the data.groups object\n  var group = svg\n  .datum(res)\n  .append(\"g\")\n  .selectAll(\"g\")\n  .data(function(d) { return d.groups; })\n  .enter()\n\n  // add the group arcs on the outer part of the circle\n  group.append(\"g\")\n    .append(\"path\")\n    .style(\"fill\", function(_,i){ return colors[i] })\n    .style(\"stroke\", \"black\")\n    .attr(\"d\", d3.arc()\n      .innerRadius(300)\n      .outerRadius(310)\n    )\n\n  // Add the ticks\n  group\n  .selectAll(\".group-tick\")\n  .data(function(d) { return groupTicks(d, 25); })    // Controls the number of ticks: one tick each 25 here.\n  .enter()\n  .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + 305 + \",0)\"; })\n  .append(\"line\")               // By default, x1 = y1 = y2 = 0, so no need to specify it.\n    .attr(\"x2\", 6)\n    .attr(\"stroke\", \"black\")\n\n\n  const tick = 25000\n  // Add the labels of a few ticks:\n  group\n  .selectAll(\".group-tick-label\")\n  .data(function(d) { return groupTicks(d, tick); })\n  .enter()\n  .filter(function(d) { return d.value % tick === 0; })\n  .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + 305 + \",0)\"; })\n  .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.angle > Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.angle > Math.PI ? \"end\" : null; })\n    .text(function(d) { return d.value })\n    .style(\"font-size\", 9)\n  \n  // Returns an array of tick angles and values for a given group and step.\n  function groupTicks(d, step) {\n    var k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(function(value) {\n      return {value: value, angle: value * k + d.startAngle};\n    });\n  }\n  */\n}\n\nfunction highlightGroup(event, links) {\n  links\n    .filter(function(d) { return d.source.index != event.index })\n    .attr(\"opacity\", 0.1)\n}\n\nfunction unhighlightGroup(links) {\n  links.attr(\"opacity\", 0.5)\n}\n\nfunction showTooltip() {}\n\nfunction unshowTooltip() {}\n","import * as onglet1 from './scripts/onglet1.js'\nimport * as onglet2 from './scripts/onglet2.js'\nimport * as onglet3 from './scripts/onglet3.js'\nimport * as chord from './scripts/chord.js'\n\n(function (d3) {\n    onglet1.build(d3.select('#tab-1-content'))\n    // onglet2.build(d3.select('#tab-2-content'))\n    // onglet3.build(d3.select('#tab-3-content'))\n\n    // d3.csv('./TRIP_V1.csv', d3.autoType).then((data) => {   \n    //     onglet1.build(d3.select('#tab-1-content'))\n    // })\n\n    // window.addEventListener('resize', () => {\n    //    onglet1.rebuild(d3.select('#tab-1-content'))\n    // })\n\n    d3.csv('./TRIP_CHORD.csv').then(function(chordData) {\n        chord.build(d3.select('#tab-3-content'), chordData)\n    })\n\n    onglet3.build(d3.select('#tab-3-content'))\n\n    // TODO : Resize automatique ?\n\n})(d3)\n\n$('.tab-button').click(function () {\n    if (!$(this).hasClass('tab-button-active')) {\n        const tab = $(this).data('tab')\n    \n        $('button.tab-button').removeClass('tab-button-active')\n        $(this).addClass('tab-button-active')\n    \n        $('.tab-content').removeClass('visible-tab')\n        $(`.tab-content#tab-${tab}-content`).addClass('visible-tab')\n    }\n})"]}
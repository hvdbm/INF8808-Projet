{"version":3,"sources":["scripts/onglet1.js","scripts/crossfilter.js","scripts/onglet2.js","scripts/preprocess.js","scripts/onglet3.js","scripts/chord.js","index.js"],"names":["build","div","bounds","d3","select","node","getBoundingClientRect","margin","top","right","bottom","left","width","height","svg","append","attr","csv","d","date","timeParse","Barges","Excursion","Fishing","Merchant","Other","Tanker","Tugs","then","data","keys","columns","slice","color","scaleOrdinal","domain","range","schemeSet2","stackedData","stack","x","scaleTime","extent","call","axisBottom","ticks","text","y","scaleLinear","axisLeft","areaChart","area","y0","y1","selectAll","enter","key","style","highlight","noHighlight","size","_","i","on","exports","crossfilter","version","crossfilter_identity","permute","array","index","n","length","copy","Array","bisect","bisect_by","by","f","bisectLeft","a","lo","hi","mid","bisectRight","heap","heap_by","sift","sort","t","child","heapselect","heapselect_by","k","queue","Math","min","insertionsort","insertionsort_by","j","quicksort","quicksort_by","quicksort_sizeThreshold","sixth","i1","i5","i3","i2","i4","e1","x1","e2","x2","e3","x3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","crossfilter_array8","crossfilter_arrayUntyped","crossfilter_array16","crossfilter_array32","crossfilter_arrayLengthen","crossfilter_arrayLengthenUntyped","crossfilter_arrayWiden","crossfilter_arrayWidenUntyped","Uint8Array","Uint16Array","Uint32Array","constructor","set","Error","crossfilter_filterExact","value","values","crossfilter_filterRange","max","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","p","crossfilter_reduceDecrement","crossfilter_reduceAdd","v","crossfilter_reduceSubtract","add","remove","removeData","dimension","groupAll","m","M","filters","filterListeners","dataListeners","removeDataListeners","newData","n0","n1","concat","forEach","l","newIndex","crossfilter_index","removed","push","filter","filterExact","filterRange","filterFunction","filterAll","group","dispose","one","zero","newValues","refilter","refilterFunction","indexListeners","dimensionGroups","lo0","hi0","unshift","preAdd","postAdd","map","crossfilter_range","lo1","hi1","oldValues","oldIndex","i0","reIndex","filterIndexBounds","filterIndexFunction","added","isArray","all","reduce","reduceCount","reduceSum","order","orderNatural","groups","groupIndex","groupWidth","groupCapacity","crossfilter_capacity","reduceAdd","reduceRemove","reduceInitial","update","reset","resetNeeded","arguments","oldGroups","initial","k0","g0","x0","g","groupIncrement","indexOf","updateMany","resetMany","updateOne","resetOne","oldK","seenGroups","filterOne","valueOf","splice","reduceValue","w","removeDuplicate","name","cleanPortName","words","split","word","newWord","toLowerCase","letterIndex","letter","match","substring","toUpperCase","join","isPortExcluded","includes","dataPerMonth","dataPerPort","selectWidth","selectHeight","data1","data2","data3","transformDataPorts","transformDataMonths","setHistograms","setStackedBar","Map","line","arrivalPort","departurePort","has","get","traffic","from","b","departureDate","Date","setDate","arrivalDate","setMonth","getMonth","sDate","toDateString","month","nb","buildTable","xScale","scaleBand","padding","yScale","tickValues","tickFormat","timeFormat","topTraffic","row","selected","classed","port","undefined","selectPort","nbLines","property","html","title","setHistogram","id","hist","histogram","thresholds","bins","total","type","subtype","number","subtypes","colors","darker_colors","currSum","entries","color_list","ceil","GLOBAL_VESSEL_TYPE","REGION_NAME","REGION_COLOR","findGlobalVesselType","vesselType","clean","cleanData","element","chordMatrix","matrix","departureRegion","arrivalRegion","count","partialSum","Number","buildHeatmap","myGroups","preproc","myVars","myColor","transformData","heatmapMap","keyStart","keyStop","current","Region","Type","transformedData","rectSelect","rectUnselect","bandwidth","initLegend","drawLegend","graphSize","region","toFixed","colorScale","defs","linearGradient","tick","nodes","offset","fill","scale","axis","innerRadius","outerRadius","res","chord","padAngle","sortSubgroups","descending","links","datum","source","target","console","log","subindex","ribbon","radius","arc","event","highlightGroup","unhighlightGroup","startAngle","PI","showTooltip","unshowTooltip","onglet1","chordData","onglet3","$","click","hasClass","tab","removeClass","addClass"],"mappings":"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","file":"INF8808-Projet.54f5ab72.js","sourceRoot":"..","sourcesContent":["// Source : https://d3-graph-gallery.com/graph/stackedarea_template.html\nexport function build(div) {\n  // set the dimensions and margins of the graph\n  const bounds = d3.select('#stacked-area-chart').node().getBoundingClientRect()\n  var margin = {top: 60, right: 230, bottom: 50, left: 70},\n  width = bounds.width - margin.left - margin.right,\n  height = 800 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = div.select(\"#stacked-area-chart\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  d3.csv('./TRIP_STACK.csv', function(d){\n      return { \n        date : d3.timeParse(\"%Y-%m-%d\")(d.date), \n        Barges : d.Barges, \n        Excursion : d.Excursion,\n        Fishing : d.Fishing,\n        Merchant : d.Merchant,\n        Other : d.Other,\n        'Pleasure Crafts': d['Pleasure Crafts'],\n        Tanker : d.Tanker,\n        Tugs : d.Tugs,\n      }\n  }).then( function(data) {\n    const keys = data.columns.slice(1)  // List of Vessel Types = header of the csv files\n\n    const color = d3.scaleOrdinal()\n      .domain(keys)\n      .range(d3.schemeSet2);\n\n    const stackedData = d3.stack()\n      .keys(keys)\n    (data)\n\n    // Add X axis\n    const x = d3.scaleTime()\n    .domain(d3.extent(data, d => d.date))\n    .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(10))\n\n    // Add X axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", height+40 )\n      .text(\"Temps\");\n\n    // Add Y axis\n    const y = d3.scaleLinear()\n      .domain([0, 800])     // TODO : Y Automatique ?\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y).ticks(15))\n\n    // Add Y axis label:\n    svg.append(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -20 )\n      .text(\"Nombre de navires\")\n      .attr(\"text-anchor\", \"start\")\n\n    // Area generator\n    const areaChart = svg.append('g')\n    const area = d3.area()\n      .x(function(d) { return x(d.data.date); })\n      .y0(function(d) { return y(d[0]); })\n      .y1(function(d) { return y(d[1]); })\n\n    // Show the areas\n    areaChart\n    .selectAll(\"mylayers\")\n    .data(stackedData)\n    .enter()\n    .append(\"path\")\n      .attr(\"class\", function(d) { return \"myArea \" + d.key })\n      .style(\"fill\", function(d) { return color(d.key); })\n      .attr(\"d\", area)\n\n    // What to do when one group is hovered\n    const highlight = function(d){\n      d3.selectAll(\".myArea\").style(\"opacity\", .1)  // reduce opacity of all groups\n      d3.select(\".\"+d).style(\"opacity\", 1)  // expect the one that is hovered\n    }\n\n    // And when it is not hovered anymore\n    const noHighlight = function(){\n      d3.selectAll(\".myArea\").style(\"opacity\", 1)\n    }\n\n    // LEGEND //\n    const size = 20\n    svg.selectAll(\"myrect\")   // Add one dot in the legend for each name.\n      .data(keys)\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", width)\n        .attr(\"y\", function(_,i){ return 10 + i*(size+5)}) // 100 is where the first dot appears. 25 is the distance between dots\n        .attr(\"width\", size)\n        .attr(\"height\", size)\n        .attr(\"stroke-width\", 0.5)\n        .attr(\"stroke\", \"black\")\n        .style(\"fill\", function(d){ return color(d)})\n        .on(\"mouseover\", highlight)\n        .on(\"mouseleave\", noHighlight)\n\n    svg.selectAll(\"mylabels\")   // Add one dot in the legend for each name.\n      .data(keys)\n      .enter()\n      .append(\"text\")\n        .attr(\"x\", width + size*1.2)\n        .attr(\"y\", function(_,i){ return 10 + i*(size+5) + (size/2)}) // 100 is where the first dot appears. 25 is the distance between dots\n        .style(\"fill\", function(d){ return color(d)})\n        .text(function(d){ return d})\n        .attr(\"text-anchor\", \"left\")\n        .style(\"alignment-baseline\", \"middle\")\n        .on(\"mouseover\", highlight)\n        .on(\"mouseleave\", noHighlight)\n    })\n}\n","(function(exports){\n  crossfilter.version = \"1.3.14\";\n  function crossfilter_identity(d) {\n    return d;\n  }\n  crossfilter.permute = permute;\n  \n  function permute(array, index) {\n    for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n      copy[i] = array[index[i]];\n    }\n    return copy;\n  }\n  var bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n  \n  bisect.by = bisect_by;\n  \n  function bisect_by(f) {\n  \n    // Locate the insertion point for x in a to maintain sorted order. The\n    // arguments lo and hi may be used to specify a subset of the array which\n    // should be considered; by default the entire array is used. If x is already\n    // present in a, the insertion point will be before (to the left of) any\n    // existing entries. The return value is suitable for use as the first\n    // argument to `array.splice` assuming that a is already sorted.\n    //\n    // The returned insertion point i partitions the array a into two halves so\n    // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n    // a[i:hi] for the right side.\n    function bisectLeft(a, x, lo, hi) {\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (f(a[mid]) < x) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    }\n  \n    // Similar to bisectLeft, but returns an insertion point which comes after (to\n    // the right of) any existing entries of x in a.\n    //\n    // The returned insertion point i partitions the array into two halves so that\n    // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n    // a[i:hi] for the right side.\n    function bisectRight(a, x, lo, hi) {\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (x < f(a[mid])) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  \n    bisectRight.right = bisectRight;\n    bisectRight.left = bisectLeft;\n    return bisectRight;\n  }\n  var heap = crossfilter.heap = heap_by(crossfilter_identity);\n  \n  heap.by = heap_by;\n  \n  function heap_by(f) {\n  \n    // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n    // property such that the parent a[lo+i] is always less than or equal to its\n    // two children: a[lo+2*i+1] and a[lo+2*i+2].\n    function heap(a, lo, hi) {\n      var n = hi - lo,\n          i = (n >>> 1) + 1;\n      while (--i > 0) sift(a, i, n, lo);\n      return a;\n    }\n  \n    // Sorts the specified array a[lo:hi] in descending order, assuming it is\n    // already a heap.\n    function sort(a, lo, hi) {\n      var n = hi - lo,\n          t;\n      while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n      return a;\n    }\n  \n    // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n    // slice of array a[lo:lo+n]. This method can also be used to update the heap\n    // incrementally, without incurring the full cost of reconstructing the heap.\n    function sift(a, i, n, lo) {\n      var d = a[--lo + i],\n          x = f(d),\n          child;\n      while ((child = i << 1) <= n) {\n        if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n        if (x <= f(a[lo + child])) break;\n        a[lo + i] = a[lo + child];\n        i = child;\n      }\n      a[lo + i] = d;\n    }\n  \n    heap.sort = sort;\n    return heap;\n  }\n  var heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n  \n  heapselect.by = heapselect_by;\n  \n  function heapselect_by(f) {\n    var heap = heap_by(f);\n  \n    // Returns a new array containing the top k elements in the array a[lo:hi].\n    // The returned array is not sorted, but maintains the heap property. If k is\n    // greater than hi - lo, then fewer than k elements will be returned. The\n    // order of elements in a is unchanged by this operation.\n    function heapselect(a, lo, hi, k) {\n      var queue = new Array(k = Math.min(hi - lo, k)),\n          min,\n          i,\n          x,\n          d;\n  \n      for (i = 0; i < k; ++i) queue[i] = a[lo++];\n      heap(queue, 0, k);\n  \n      if (lo < hi) {\n        min = f(queue[0]);\n        do {\n          if (x = f(d = a[lo]) > min) {\n            queue[0] = d;\n            min = f(heap(queue, 0, k)[0]);\n          }\n        } while (++lo < hi);\n      }\n  \n      return queue;\n    }\n  \n    return heapselect;\n  }\n  var insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n  \n  insertionsort.by = insertionsort_by;\n  \n  function insertionsort_by(f) {\n  \n    function insertionsort(a, lo, hi) {\n      for (var i = lo + 1; i < hi; ++i) {\n        for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n          a[j] = a[j - 1];\n        }\n        a[j] = t;\n      }\n      return a;\n    }\n  \n    return insertionsort;\n  }\n  // Algorithm designed by Vladimir Yaroslavskiy.\n  // Implementation based on the Dart project; see lib/dart/LICENSE for details.\n  \n  var quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n  \n  quicksort.by = quicksort_by;\n  \n  function quicksort_by(f) {\n    var insertionsort = insertionsort_by(f);\n  \n    function sort(a, lo, hi) {\n      return (hi - lo < quicksort_sizeThreshold\n          ? insertionsort\n          : quicksort)(a, lo, hi);\n    }\n  \n    function quicksort(a, lo, hi) {\n      // Compute the two pivots by looking at 5 elements.\n      var sixth = (hi - lo) / 6 | 0,\n          i1 = lo + sixth,\n          i5 = hi - 1 - sixth,\n          i3 = lo + hi - 1 >> 1,  // The midpoint.\n          i2 = i3 - sixth,\n          i4 = i3 + sixth;\n  \n      var e1 = a[i1], x1 = f(e1),\n          e2 = a[i2], x2 = f(e2),\n          e3 = a[i3], x3 = f(e3),\n          e4 = a[i4], x4 = f(e4),\n          e5 = a[i5], x5 = f(e5);\n  \n      var t;\n  \n      // Sort the selected 5 elements using a sorting network.\n      if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n      if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n      if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n      if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n      if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n      if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n      if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n      if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n      if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n  \n      var pivot1 = e2, pivotValue1 = x2,\n          pivot2 = e4, pivotValue2 = x4;\n  \n      // e2 and e4 have been saved in the pivot variables. They will be written\n      // back, once the partitioning is finished.\n      a[i1] = e1;\n      a[i2] = a[lo];\n      a[i3] = e3;\n      a[i4] = a[hi - 1];\n      a[i5] = e5;\n  \n      var less = lo + 1,   // First element in the middle partition.\n          great = hi - 2;  // Last element in the middle partition.\n  \n      // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n      // Object.prototype.valueOf; == and === do not, so in order to be consistent\n      // with natural order (such as for Date objects), we must do two compares.\n      var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n      if (pivotsEqual) {\n  \n        // Degenerated case where the partitioning becomes a dutch national flag\n        // problem.\n        //\n        // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n        //  ^             ^          ^             ^            ^\n        // left         less         k           great         right\n        //\n        // a[left] and a[right] are undefined and are filled after the\n        // partitioning.\n        //\n        // Invariants:\n        //   1) for x in ]left, less[ : x < pivot.\n        //   2) for x in [less, k[ : x == pivot.\n        //   3) for x in ]great, right[ : x > pivot.\n        for (var k = less; k <= great; ++k) {\n          var ek = a[k], xk = f(ek);\n          if (xk < pivotValue1) {\n            if (k !== less) {\n              a[k] = a[less];\n              a[less] = ek;\n            }\n            ++less;\n          } else if (xk > pivotValue1) {\n  \n            // Find the first element <= pivot in the range [k - 1, great] and\n            // put [:ek:] there. We know that such an element must exist:\n            // When k == less, then el3 (which is equal to pivot) lies in the\n            // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n            // Note that in the latter case invariant 2 will be violated for a\n            // short amount of time. The invariant will be restored when the\n            // pivots are put into their final positions.\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue1) {\n                great--;\n                // This is the only location in the while-loop where a new\n                // iteration is started.\n                continue;\n              } else if (greatValue < pivotValue1) {\n                // Triple exchange.\n                a[k] = a[less];\n                a[less++] = a[great];\n                a[great--] = ek;\n                break;\n              } else {\n                a[k] = a[great];\n                a[great--] = ek;\n                // Note: if great < k then we will exit the outer loop and fix\n                // invariant 2 (which we just violated).\n                break;\n              }\n            }\n          }\n        }\n      } else {\n  \n        // We partition the list into three parts:\n        //  1. < pivot1\n        //  2. >= pivot1 && <= pivot2\n        //  3. > pivot2\n        //\n        // During the loop we have:\n        // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n        //  ^            ^                        ^              ^             ^\n        // left         less                     k              great        right\n        //\n        // a[left] and a[right] are undefined and are filled after the\n        // partitioning.\n        //\n        // Invariants:\n        //   1. for x in ]left, less[ : x < pivot1\n        //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n        //   3. for x in ]great, right[ : x > pivot2\n        for (var k = less; k <= great; k++) {\n          var ek = a[k], xk = f(ek);\n          if (xk < pivotValue1) {\n            if (k !== less) {\n              a[k] = a[less];\n              a[less] = ek;\n            }\n            ++less;\n          } else {\n            if (xk > pivotValue2) {\n              while (true) {\n                var greatValue = f(a[great]);\n                if (greatValue > pivotValue2) {\n                  great--;\n                  if (great < k) break;\n                  // This is the only location inside the loop where a new\n                  // iteration is started.\n                  continue;\n                } else {\n                  // a[great] <= pivot2.\n                  if (greatValue < pivotValue1) {\n                    // Triple exchange.\n                    a[k] = a[less];\n                    a[less++] = a[great];\n                    a[great--] = ek;\n                  } else {\n                    // a[great] >= pivot1.\n                    a[k] = a[great];\n                    a[great--] = ek;\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n  \n      // Move pivots into their final positions.\n      // We shrunk the list from both sides (a[left] and a[right] have\n      // meaningless values in them) and now we move elements from the first\n      // and third partition into these locations so that we can store the\n      // pivots.\n      a[lo] = a[less - 1];\n      a[less - 1] = pivot1;\n      a[hi - 1] = a[great + 1];\n      a[great + 1] = pivot2;\n  \n      // The list is now partitioned into three partitions:\n      // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n      //  ^            ^                        ^             ^\n      // left         less                     great        right\n  \n      // Recursive descent. (Don't include the pivot values.)\n      sort(a, lo, less - 1);\n      sort(a, great + 2, hi);\n  \n      if (pivotsEqual) {\n        // All elements in the second partition are equal to the pivot. No\n        // need to sort them.\n        return a;\n      }\n  \n      // In theory it should be enough to call _doSort recursively on the second\n      // partition.\n      // The Android source however removes the pivot elements from the recursive\n      // call if the second partition is too large (more than 2/3 of the list).\n      if (less < i1 && great > i5) {\n        var lessValue, greatValue;\n        while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n        while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n  \n        // Copy paste of the previous 3-way partitioning with adaptions.\n        //\n        // We partition the list into three parts:\n        //  1. == pivot1\n        //  2. > pivot1 && < pivot2\n        //  3. == pivot2\n        //\n        // During the loop we have:\n        // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n        //              ^                      ^              ^\n        //            less                     k              great\n        //\n        // Invariants:\n        //   1. for x in [ *, less[ : x == pivot1\n        //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n        //   3. for x in ]great, * ] : x == pivot2\n        for (var k = less; k <= great; k++) {\n          var ek = a[k], xk = f(ek);\n          if (xk <= pivotValue1 && xk >= pivotValue1) {\n            if (k !== less) {\n              a[k] = a[less];\n              a[less] = ek;\n            }\n            less++;\n          } else {\n            if (xk <= pivotValue2 && xk >= pivotValue2) {\n              while (true) {\n                var greatValue = f(a[great]);\n                if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                  great--;\n                  if (great < k) break;\n                  // This is the only location inside the loop where a new\n                  // iteration is started.\n                  continue;\n                } else {\n                  // a[great] < pivot2.\n                  if (greatValue < pivotValue1) {\n                    // Triple exchange.\n                    a[k] = a[less];\n                    a[less++] = a[great];\n                    a[great--] = ek;\n                  } else {\n                    // a[great] == pivot1.\n                    a[k] = a[great];\n                    a[great--] = ek;\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n  \n      // The second partition has now been cleared of pivot elements and looks\n      // as follows:\n      // [  *  |  > pivot1 && < pivot2  | * ]\n      //        ^                      ^\n      //       less                  great\n      // Sort the second partition using recursive descent.\n  \n      // The second partition looks as follows:\n      // [  *  |  >= pivot1 && <= pivot2  | * ]\n      //        ^                        ^\n      //       less                    great\n      // Simply sort it by recursive descent.\n  \n      return sort(a, less, great + 1);\n    }\n  \n    return sort;\n  }\n  \n  var quicksort_sizeThreshold = 32;\n  var crossfilter_array8 = crossfilter_arrayUntyped,\n      crossfilter_array16 = crossfilter_arrayUntyped,\n      crossfilter_array32 = crossfilter_arrayUntyped,\n      crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n      crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n  \n  if (typeof Uint8Array !== \"undefined\") {\n    crossfilter_array8 = function(n) { return new Uint8Array(n); };\n    crossfilter_array16 = function(n) { return new Uint16Array(n); };\n    crossfilter_array32 = function(n) { return new Uint32Array(n); };\n  \n    crossfilter_arrayLengthen = function(array, length) {\n      if (array.length >= length) return array;\n      var copy = new array.constructor(length);\n      copy.set(array);\n      return copy;\n    };\n  \n    crossfilter_arrayWiden = function(array, width) {\n      var copy;\n      switch (width) {\n        case 16: copy = crossfilter_array16(array.length); break;\n        case 32: copy = crossfilter_array32(array.length); break;\n        default: throw new Error(\"invalid array width!\");\n      }\n      copy.set(array);\n      return copy;\n    };\n  }\n  \n  function crossfilter_arrayUntyped(n) {\n    var array = new Array(n), i = -1;\n    while (++i < n) array[i] = 0;\n    return array;\n  }\n  \n  function crossfilter_arrayLengthenUntyped(array, length) {\n    var n = array.length;\n    while (n < length) array[n++] = 0;\n    return array;\n  }\n  \n  function crossfilter_arrayWidenUntyped(array, width) {\n    if (width > 32) throw new Error(\"invalid array width!\");\n    return array;\n  }\n  function crossfilter_filterExact(bisect, value) {\n    return function(values) {\n      var n = values.length;\n      return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n    };\n  }\n  \n  function crossfilter_filterRange(bisect, range) {\n    var min = range[0],\n        max = range[1];\n    return function(values) {\n      var n = values.length;\n      return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n    };\n  }\n  \n  function crossfilter_filterAll(values) {\n    return [0, values.length];\n  }\n  function crossfilter_null() {\n    return null;\n  }\n  function crossfilter_zero() {\n    return 0;\n  }\n  function crossfilter_reduceIncrement(p) {\n    return p + 1;\n  }\n  \n  function crossfilter_reduceDecrement(p) {\n    return p - 1;\n  }\n  \n  function crossfilter_reduceAdd(f) {\n    return function(p, v) {\n      return p + +f(v);\n    };\n  }\n  \n  function crossfilter_reduceSubtract(f) {\n    return function(p, v) {\n      return p - f(v);\n    };\n  }\n  exports.crossfilter = crossfilter;\n  \n  function crossfilter() {\n    var crossfilter = {\n      add: add,\n      remove: removeData,\n      dimension: dimension,\n      groupAll: groupAll,\n      size: size\n    };\n  \n    var data = [], // the records\n        n = 0, // the number of records; data.length\n        m = 0, // a bit mask representing which dimensions are in use\n        M = 8, // number of dimensions that can fit in `filters`\n        filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n        filterListeners = [], // when the filters change\n        dataListeners = [], // when data is added\n        removeDataListeners = []; // when data is removed\n  \n    // Adds the specified new records to this crossfilter.\n    function add(newData) {\n      var n0 = n,\n          n1 = newData.length;\n  \n      // If there's actually new data to add…\n      // Merge the new data into the existing data.\n      // Lengthen the filter bitset to handle the new records.\n      // Notify listeners (dimensions and groups) that new data is available.\n      if (n1) {\n        data = data.concat(newData);\n        filters = crossfilter_arrayLengthen(filters, n += n1);\n        dataListeners.forEach(function(l) { l(newData, n0, n1); });\n      }\n  \n      return crossfilter;\n    }\n  \n    // Removes all records that match the current filters.\n    function removeData() {\n      var newIndex = crossfilter_index(n, n),\n          removed = [];\n      for (var i = 0, j = 0; i < n; ++i) {\n        if (filters[i]) newIndex[i] = j++;\n        else removed.push(i);\n      }\n  \n      // Remove all matching records from groups.\n      filterListeners.forEach(function(l) { l(0, [], removed); });\n  \n      // Update indexes.\n      removeDataListeners.forEach(function(l) { l(newIndex); });\n  \n      // Remove old filters and data by overwriting.\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (k = filters[i]) {\n          if (i !== j) filters[j] = k, data[j] = data[i];\n          ++j;\n        }\n      }\n      data.length = j;\n      while (n > j) filters[--n] = 0;\n    }\n  \n    // Adds a new dimension with the specified value accessor function.\n    function dimension(value) {\n      var dimension = {\n        filter: filter,\n        filterExact: filterExact,\n        filterRange: filterRange,\n        filterFunction: filterFunction,\n        filterAll: filterAll,\n        top: top,\n        bottom: bottom,\n        group: group,\n        groupAll: groupAll,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n  \n      var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n          zero = ~one, // inverted one, e.g., 11110111\n          values, // sorted, cached array\n          index, // value rank ↦ object id\n          newValues, // temporary array storing newly-added values\n          newIndex, // temporary array storing newly-added index\n          sort = quicksort_by(function(i) { return newValues[i]; }),\n          refilter = crossfilter_filterAll, // for recomputing filter\n          refilterFunction, // the custom filter function in use\n          indexListeners = [], // when data is added\n          dimensionGroups = [],\n          lo0 = 0,\n          hi0 = 0;\n  \n      // Updating a dimension is a two-stage process. First, we must update the\n      // associated filters for the newly-added records. Once all dimensions have\n      // updated their filters, the groups are notified to update.\n      dataListeners.unshift(preAdd);\n      dataListeners.push(postAdd);\n  \n      removeDataListeners.push(removeData);\n  \n      // Incorporate any existing data into this dimension, and make sure that the\n      // filter bitset is wide enough to handle the new dimension.\n      m |= one;\n      if (M >= 32 ? !one : m & -(1 << M)) {\n        filters = crossfilter_arrayWiden(filters, M <<= 1);\n      }\n      preAdd(data, 0, n);\n      postAdd(data, 0, n);\n  \n      // Incorporates the specified new records into this dimension.\n      // This function is responsible for updating filters, values, and index.\n      function preAdd(newData, n0, n1) {\n  \n        // Permute new values into natural order using a sorted index.\n        newValues = newData.map(value);\n        newIndex = sort(crossfilter_range(n1), 0, n1);\n        newValues = permute(newValues, newIndex);\n  \n        // Bisect newValues to determine which new records are selected.\n        var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n        if (refilterFunction) {\n          for (i = 0; i < n1; ++i) {\n            if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n          }\n        } else {\n          for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n          for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n        }\n  \n        // If this dimension previously had no data, then we don't need to do the\n        // more expensive merge operation; use the new values and index as-is.\n        if (!n0) {\n          values = newValues;\n          index = newIndex;\n          lo0 = lo1;\n          hi0 = hi1;\n          return;\n        }\n  \n        var oldValues = values,\n            oldIndex = index,\n            i0 = 0,\n            i1 = 0;\n  \n        // Otherwise, create new arrays into which to merge new and old.\n        values = new Array(n);\n        index = crossfilter_index(n, n);\n  \n        // Merge the old and new sorted values, and old and new index.\n        for (i = 0; i0 < n0 && i1 < n1; ++i) {\n          if (oldValues[i0] < newValues[i1]) {\n            values[i] = oldValues[i0];\n            index[i] = oldIndex[i0++];\n          } else {\n            values[i] = newValues[i1];\n            index[i] = newIndex[i1++] + n0;\n          }\n        }\n  \n        // Add any remaining old values.\n        for (; i0 < n0; ++i0, ++i) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0];\n        }\n  \n        // Add any remaining new values.\n        for (; i1 < n1; ++i1, ++i) {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1] + n0;\n        }\n  \n        // Bisect again to recompute lo0 and hi0.\n        bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n      }\n  \n      // When all filters have updated, notify index listeners of the new values.\n      function postAdd(newData, n0, n1) {\n        indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n        newValues = newIndex = null;\n      }\n  \n      function removeData(reIndex) {\n        for (var i = 0, j = 0, k; i < n; ++i) {\n          if (filters[k = index[i]]) {\n            if (i !== j) values[j] = values[i];\n            index[j] = reIndex[k];\n            ++j;\n          }\n        }\n        values.length = j;\n        while (j < n) index[j++] = 0;\n  \n        // Bisect again to recompute lo0 and hi0.\n        var bounds = refilter(values);\n        lo0 = bounds[0], hi0 = bounds[1];\n      }\n  \n      // Updates the selected values based on the specified bounds [lo, hi].\n      // This implementation is used by all the public filter methods.\n      function filterIndexBounds(bounds) {\n        var lo1 = bounds[0],\n            hi1 = bounds[1];\n  \n        if (refilterFunction) {\n          refilterFunction = null;\n          filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n          lo0 = lo1;\n          hi0 = hi1;\n          return dimension;\n        }\n  \n        var i,\n            j,\n            k,\n            added = [],\n            removed = [];\n  \n        // Fast incremental update based on previous lo index.\n        if (lo1 < lo0) {\n          for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n            filters[k = index[i]] ^= one;\n            added.push(k);\n          }\n        } else if (lo1 > lo0) {\n          for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n            filters[k = index[i]] ^= one;\n            removed.push(k);\n          }\n        }\n  \n        // Fast incremental update based on previous hi index.\n        if (hi1 > hi0) {\n          for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n            filters[k = index[i]] ^= one;\n            added.push(k);\n          }\n        } else if (hi1 < hi0) {\n          for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n            filters[k = index[i]] ^= one;\n            removed.push(k);\n          }\n        }\n  \n        lo0 = lo1;\n        hi0 = hi1;\n        filterListeners.forEach(function(l) { l(one, added, removed); });\n        return dimension;\n      }\n  \n      // Filters this dimension using the specified range, value, or null.\n      // If the range is null, this is equivalent to filterAll.\n      // If the range is an array, this is equivalent to filterRange.\n      // Otherwise, this is equivalent to filterExact.\n      function filter(range) {\n        return range == null\n            ? filterAll() : Array.isArray(range)\n            ? filterRange(range) : typeof range === \"function\"\n            ? filterFunction(range)\n            : filterExact(range);\n      }\n  \n      // Filters this dimension to select the exact value.\n      function filterExact(value) {\n        return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n      }\n  \n      // Filters this dimension to select the specified range [lo, hi].\n      // The lower bound is inclusive, and the upper bound is exclusive.\n      function filterRange(range) {\n        return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n      }\n  \n      // Clears any filters on this dimension.\n      function filterAll() {\n        return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n      }\n  \n      // Filters this dimension using an arbitrary function.\n      function filterFunction(f) {\n        refilter = crossfilter_filterAll;\n  \n        filterIndexFunction(refilterFunction = f);\n  \n        lo0 = 0;\n        hi0 = n;\n  \n        return dimension;\n      }\n  \n      function filterIndexFunction(f) {\n        var i,\n            k,\n            x,\n            added = [],\n            removed = [];\n  \n        for (i = 0; i < n; ++i) {\n          if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n            if (x) filters[k] &= zero, added.push(k);\n            else filters[k] |= one, removed.push(k);\n          }\n        }\n        filterListeners.forEach(function(l) { l(one, added, removed); });\n      }\n  \n      // Returns the top K selected records based on this dimension's order.\n      // Note: observes this dimension's filter, unlike group and groupAll.\n      function top(k) {\n        var array = [],\n            i = hi0,\n            j;\n  \n        while (--i >= lo0 && k > 0) {\n          if (!filters[j = index[i]]) {\n            array.push(data[j]);\n            --k;\n          }\n        }\n  \n        return array;\n      }\n  \n      // Returns the bottom K selected records based on this dimension's order.\n      // Note: observes this dimension's filter, unlike group and groupAll.\n      function bottom(k) {\n        var array = [],\n            i = lo0,\n            j;\n  \n        while (i < hi0 && k > 0) {\n          if (!filters[j = index[i]]) {\n            array.push(data[j]);\n            --k;\n          }\n          i++;\n        }\n  \n        return array;\n      }\n  \n      // Adds a new group to this dimension, using the specified key function.\n      function group(key) {\n        var group = {\n          top: top,\n          all: all,\n          reduce: reduce,\n          reduceCount: reduceCount,\n          reduceSum: reduceSum,\n          order: order,\n          orderNatural: orderNatural,\n          size: size,\n          dispose: dispose,\n          remove: dispose // for backwards-compatibility\n        };\n  \n        // Ensure that this group will be removed when the dimension is removed.\n        dimensionGroups.push(group);\n  \n        var groups, // array of {key, value}\n            groupIndex, // object id ↦ group id\n            groupWidth = 8,\n            groupCapacity = crossfilter_capacity(groupWidth),\n            k = 0, // cardinality\n            select,\n            heap,\n            reduceAdd,\n            reduceRemove,\n            reduceInitial,\n            update = crossfilter_null,\n            reset = crossfilter_null,\n            resetNeeded = true,\n            groupAll = key === crossfilter_null;\n  \n        if (arguments.length < 1) key = crossfilter_identity;\n  \n        // The group listens to the crossfilter for when any dimension changes, so\n        // that it can update the associated reduce values. It must also listen to\n        // the parent dimension for when data is added, and compute new keys.\n        filterListeners.push(update);\n        indexListeners.push(add);\n        removeDataListeners.push(removeData);\n  \n        // Incorporate any existing data into the grouping.\n        add(values, index, 0, n);\n  \n        // Incorporates the specified new values into this group.\n        // This function is responsible for updating groups and groupIndex.\n        function add(newValues, newIndex, n0, n1) {\n          var oldGroups = groups,\n              reIndex = crossfilter_index(k, groupCapacity),\n              add = reduceAdd,\n              initial = reduceInitial,\n              k0 = k, // old cardinality\n              i0 = 0, // index of old group\n              i1 = 0, // index of new record\n              j, // object id\n              g0, // old group\n              x0, // old key\n              x1, // new key\n              g, // group to add\n              x; // key of group to add\n  \n          // If a reset is needed, we don't need to update the reduce values.\n          if (resetNeeded) add = initial = crossfilter_null;\n  \n          // Reset the new groups (k is a lower bound).\n          // Also, make sure that groupIndex exists and is long enough.\n          groups = new Array(k), k = 0;\n          groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n  \n          // Get the first old key (x0 of g0), if it exists.\n          if (k0) x0 = (g0 = oldGroups[0]).key;\n  \n          // Find the first new key (x1), skipping NaN keys.\n          while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n  \n          // While new keys remain…\n          while (i1 < n1) {\n  \n            // Determine the lesser of the two current keys; new and old.\n            // If there are no old keys remaining, then always add the new key.\n            if (g0 && x0 <= x1) {\n              g = g0, x = x0;\n  \n              // Record the new index of the old group.\n              reIndex[i0] = k;\n  \n              // Retrieve the next old key.\n              if (g0 = oldGroups[++i0]) x0 = g0.key;\n            } else {\n              g = {key: x1, value: initial()}, x = x1;\n            }\n  \n            // Add the lesser group.\n            groups[k] = g;\n  \n            // Add any selected records belonging to the added group, while\n            // advancing the new key and populating the associated group index.\n            while (!(x1 > x)) {\n              groupIndex[j = newIndex[i1] + n0] = k;\n              if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n              if (++i1 >= n1) break;\n              x1 = key(newValues[i1]);\n            }\n  \n            groupIncrement();\n          }\n  \n          // Add any remaining old groups that were greater than all new keys.\n          // No incremental reduce is needed; these groups have no new records.\n          // Also record the new index of the old group.\n          while (i0 < k0) {\n            groups[reIndex[i0] = k] = oldGroups[i0++];\n            groupIncrement();\n          }\n  \n          // If we added any new groups before any old groups,\n          // update the group index of all the old records.\n          if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n            groupIndex[i0] = reIndex[groupIndex[i0]];\n          }\n  \n          // Modify the update and reset behavior based on the cardinality.\n          // If the cardinality is less than or equal to one, then the groupIndex\n          // is not needed. If the cardinality is zero, then there are no records\n          // and therefore no groups to update or reset. Note that we also must\n          // change the registered listener to point to the new method.\n          j = filterListeners.indexOf(update);\n          if (k > 1) {\n            update = updateMany;\n            reset = resetMany;\n          } else {\n            if (!k && groupAll) {\n              k = 1;\n              groups = [{key: null, value: initial()}];\n            }\n            if (k === 1) {\n              update = updateOne;\n              reset = resetOne;\n            } else {\n              update = crossfilter_null;\n              reset = crossfilter_null;\n            }\n            groupIndex = null;\n          }\n          filterListeners[j] = update;\n  \n          // Count the number of added groups,\n          // and widen the group index as needed.\n          function groupIncrement() {\n            if (++k === groupCapacity) {\n              reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n              groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n              groupCapacity = crossfilter_capacity(groupWidth);\n            }\n          }\n        }\n  \n        function removeData() {\n          if (k > 1) {\n            var oldK = k,\n                oldGroups = groups,\n                seenGroups = crossfilter_index(oldK, oldK);\n  \n            // Filter out non-matches by copying matching group index entries to\n            // the beginning of the array.\n            for (var i = 0, j = 0; i < n; ++i) {\n              if (filters[i]) {\n                seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n                ++j;\n              }\n            }\n  \n            // Reassemble groups including only those groups that were referred\n            // to by matching group index entries.  Note the new group index in\n            // seenGroups.\n            groups = [], k = 0;\n            for (i = 0; i < oldK; ++i) {\n              if (seenGroups[i]) {\n                seenGroups[i] = k++;\n                groups.push(oldGroups[i]);\n              }\n            }\n  \n            if (k > 1) {\n              // Reindex the group index using seenGroups to find the new index.\n              for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n            } else {\n              groupIndex = null;\n            }\n            filterListeners[filterListeners.indexOf(update)] = k > 1\n                ? (reset = resetMany, update = updateMany)\n                : k === 1 ? (reset = resetOne, update = updateOne)\n                : reset = update = crossfilter_null;\n          } else if (k === 1) {\n            if (groupAll) return;\n            for (var i = 0; i < n; ++i) if (filters[i]) return;\n            groups = [], k = 0;\n            filterListeners[filterListeners.indexOf(update)] =\n            update = reset = crossfilter_null;\n          }\n        }\n  \n        // Reduces the specified selected or deselected records.\n        // This function is only used when the cardinality is greater than 1.\n        function updateMany(filterOne, added, removed) {\n          if (filterOne === one || resetNeeded) return;\n  \n          var i,\n              k,\n              n,\n              g;\n  \n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (!(filters[k = added[i]] & zero)) {\n              g = groups[groupIndex[k]];\n              g.value = reduceAdd(g.value, data[k]);\n            }\n          }\n  \n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if ((filters[k = removed[i]] & zero) === filterOne) {\n              g = groups[groupIndex[k]];\n              g.value = reduceRemove(g.value, data[k]);\n            }\n          }\n        }\n  \n        // Reduces the specified selected or deselected records.\n        // This function is only used when the cardinality is 1.\n        function updateOne(filterOne, added, removed) {\n          if (filterOne === one || resetNeeded) return;\n  \n          var i,\n              k,\n              n,\n              g = groups[0];\n  \n          // Add the added values.\n          for (i = 0, n = added.length; i < n; ++i) {\n            if (!(filters[k = added[i]] & zero)) {\n              g.value = reduceAdd(g.value, data[k]);\n            }\n          }\n  \n          // Remove the removed values.\n          for (i = 0, n = removed.length; i < n; ++i) {\n            if ((filters[k = removed[i]] & zero) === filterOne) {\n              g.value = reduceRemove(g.value, data[k]);\n            }\n          }\n        }\n  \n        // Recomputes the group reduce values from scratch.\n        // This function is only used when the cardinality is greater than 1.\n        function resetMany() {\n          var i,\n              g;\n  \n          // Reset all group values.\n          for (i = 0; i < k; ++i) {\n            groups[i].value = reduceInitial();\n          }\n  \n          // Add any selected records.\n          for (i = 0; i < n; ++i) {\n            if (!(filters[i] & zero)) {\n              g = groups[groupIndex[i]];\n              g.value = reduceAdd(g.value, data[i]);\n            }\n          }\n        }\n  \n        // Recomputes the group reduce values from scratch.\n        // This function is only used when the cardinality is 1.\n        function resetOne() {\n          var i,\n              g = groups[0];\n  \n          // Reset the singleton group values.\n          g.value = reduceInitial();\n  \n          // Add any selected records.\n          for (i = 0; i < n; ++i) {\n            if (!(filters[i] & zero)) {\n              g.value = reduceAdd(g.value, data[i]);\n            }\n          }\n        }\n  \n        // Returns the array of group values, in the dimension's natural order.\n        function all() {\n          if (resetNeeded) reset(), resetNeeded = false;\n          return groups;\n        }\n  \n        // Returns a new array containing the top K group values, in reduce order.\n        function top(k) {\n          var top = select(all(), 0, groups.length, k);\n          return heap.sort(top, 0, top.length);\n        }\n  \n        // Sets the reduce behavior for this group to use the specified functions.\n        // This method lazily recomputes the reduce values, waiting until needed.\n        function reduce(add, remove, initial) {\n          reduceAdd = add;\n          reduceRemove = remove;\n          reduceInitial = initial;\n          resetNeeded = true;\n          return group;\n        }\n  \n        // A convenience method for reducing by count.\n        function reduceCount() {\n          return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n        }\n  \n        // A convenience method for reducing by sum(value).\n        function reduceSum(value) {\n          return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n        }\n  \n        // Sets the reduce order, using the specified accessor.\n        function order(value) {\n          select = heapselect_by(valueOf);\n          heap = heap_by(valueOf);\n          function valueOf(d) { return value(d.value); }\n          return group;\n        }\n  \n        // A convenience method for natural ordering by reduce value.\n        function orderNatural() {\n          return order(crossfilter_identity);\n        }\n  \n        // Returns the cardinality of this group, irrespective of any filters.\n        function size() {\n          return k;\n        }\n  \n        // Removes this group and associated event listeners.\n        function dispose() {\n          var i = filterListeners.indexOf(update);\n          if (i >= 0) filterListeners.splice(i, 1);\n          i = indexListeners.indexOf(add);\n          if (i >= 0) indexListeners.splice(i, 1);\n          i = removeDataListeners.indexOf(removeData);\n          if (i >= 0) removeDataListeners.splice(i, 1);\n          return group;\n        }\n  \n        return reduceCount().orderNatural();\n      }\n  \n      // A convenience function for generating a singleton group.\n      function groupAll() {\n        var g = group(crossfilter_null), all = g.all;\n        delete g.all;\n        delete g.top;\n        delete g.order;\n        delete g.orderNatural;\n        delete g.size;\n        g.value = function() { return all()[0].value; };\n        return g;\n      }\n  \n      // Removes this dimension and associated groups and event listeners.\n      function dispose() {\n        dimensionGroups.forEach(function(group) { group.dispose(); });\n        var i = dataListeners.indexOf(preAdd);\n        if (i >= 0) dataListeners.splice(i, 1);\n        i = dataListeners.indexOf(postAdd);\n        if (i >= 0) dataListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        m &= zero;\n        return filterAll();\n      }\n  \n      return dimension;\n    }\n  \n    // A convenience method for groupAll on a dummy dimension.\n    // This implementation can be optimized since it always has cardinality 1.\n    function groupAll() {\n      var group = {\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        value: value,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n  \n      var reduceValue,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          resetNeeded = true;\n  \n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the reduce value. It must also listen to the parent\n      // dimension for when data is added.\n      filterListeners.push(update);\n      dataListeners.push(add);\n  \n      // For consistency; actually a no-op since resetNeeded is true.\n      add(data, 0, n);\n  \n      // Incorporates the specified new values into this group.\n      function add(newData, n0) {\n        var i;\n  \n        if (resetNeeded) return;\n  \n        // Add the added values.\n        for (i = n0; i < n; ++i) {\n          if (!filters[i]) {\n            reduceValue = reduceAdd(reduceValue, data[i]);\n          }\n        }\n      }\n  \n      // Reduces the specified selected or deselected records.\n      function update(filterOne, added, removed) {\n        var i,\n            k,\n            n;\n  \n        if (resetNeeded) return;\n  \n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!filters[k = added[i]]) {\n            reduceValue = reduceAdd(reduceValue, data[k]);\n          }\n        }\n  \n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if (filters[k = removed[i]] === filterOne) {\n            reduceValue = reduceRemove(reduceValue, data[k]);\n          }\n        }\n      }\n  \n      // Recomputes the group reduce value from scratch.\n      function reset() {\n        var i;\n  \n        reduceValue = reduceInitial();\n  \n        for (i = 0; i < n; ++i) {\n          if (!filters[i]) {\n            reduceValue = reduceAdd(reduceValue, data[i]);\n          }\n        }\n      }\n  \n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce value, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n  \n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n  \n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n  \n      // Returns the computed reduce value.\n      function value() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return reduceValue;\n      }\n  \n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i);\n        i = dataListeners.indexOf(add);\n        if (i >= 0) dataListeners.splice(i);\n        return group;\n      }\n  \n      return reduceCount();\n    }\n  \n    // Returns the number of records in this crossfilter, irrespective of any filters.\n    function size() {\n      return n;\n    }\n  \n    return arguments.length\n        ? add(arguments[0])\n        : crossfilter;\n  }\n  \n  // Returns an array of size n, big enough to store ids up to m.\n  function crossfilter_index(n, m) {\n    return (m < 0x101\n        ? crossfilter_array8 : m < 0x10001\n        ? crossfilter_array16\n        : crossfilter_array32)(n);\n  }\n  \n  // Constructs a new array of size n, with sequential values from 0 to n - 1.\n  function crossfilter_range(n) {\n    var range = crossfilter_index(n, n);\n    for (var i = -1; ++i < n;) range[i] = i;\n    return range;\n  }\n  \n  function crossfilter_capacity(w) {\n    return w === 8\n        ? 0x100 : w === 16\n        ? 0x10000\n        : 0x100000000;\n  }\n  })(typeof exports !== 'undefined' && exports || this);","import { crossfilter } from './crossfilter'\n\nexport function removeDuplicate(name) {\n    if (name == 'Saint John NB') {\n        return \"St. John's\"\n    }\n    return name\n}\n\nexport function cleanPortName(name) {\n    name = removeDuplicate(name)\n    const words = name.split(/,| |\\/|-/)\n    words.forEach((word, index) => {\n        if (word.length > 2) {\n            let newWord = word.toLowerCase()\n\n            let letterIndex = 0\n            while (true) {\n                const letter = newWord[letterIndex]\n                if (letter.match(/[a-z]/i)) {\n                    newWord = newWord.substring(0, letterIndex) + letter.toUpperCase() + newWord.substring(letterIndex + 1)\n                    break\n                }\n                letterIndex += 1\n            }\n            words[index] = newWord\n        }\n    })\n    return words.join(' ')\n}\n\nexport function isPortExcluded(name) {\n    if (name.includes('Virtual Harbour')) {\n        return true\n    }\n    return false\n}\n\nlet dataPerMonth\nlet dataPerPort\nlet data\n\nconst selectWidth = 950\nconst selectHeight = 125\n\n// Reading the data\nd3.csv(\"./TRIP_Part1.csv\").then( function(data1) {\n    d3.csv(\"./TRIP_Part2.csv\").then( function(data2) {\n        d3.csv(\"./TRIP_Part3.csv\").then( function(data3) {\n            // Id,Departure Date,Departure Hardour,Departure Region,Departure Latitude,Departure Longitude,Arrival Date,Arrival Hardour,Arrival Region,Arrival Latitude,Arrival Longitude,Vessel Type,Lenght,Width,DeadWeight Tonnage,Maximum Draugth\n            // 6079000000783579,    2011-01-01 00:00:00.000,Virtual Harbour (Central Region),Central Region,45.71666667,-84.24861111,2011-01-01 15:30:00.000,Goderich,Central Region,43.745,-81.7294441666667,Merchant Bulk,222.509994506836,22.9400005340576,31751,8.72999954223633\n            // 23079000000766048,   2011-01-01 00:10:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,2011-01-01 01:00:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,Tug Fire,38.9000015258789,13.8999996185303,314,3.5\n            // 23079000000766035,   2011-01-01 00:57:00.000,Whiffen Head,Newfoundland Region,47.7727836111111,-54.0171797222222,2011-01-02 12:45:00.000,Virtual Harbour (Newfoundland Region),Newfoundland Region,47.75,-53,Merchant Crude,271.799987792969,46.0499992370606,126646,15.3459997177124\n\n            data = data1.concat(data2).concat(data3)\n\n            dataPerPort = transformDataPorts(data)\n            dataPerMonth = transformDataMonths(data)\n\n            setHistograms(data)\n            setStackedBar(data)\n\n            build(d3.select('#tab-2-content'), dataPerMonth, dataPerPort)\n        });\n    });\n});\n\nexport function transformDataPorts(data) {\n    const map = new Map()\n    data.forEach(line => {\n        const arrivalPort = cleanPortName(line['Arrival Hardour'])\n        const departurePort = cleanPortName(line['Departure Hardour'])\n\n        if (!isPortExcluded(arrivalPort)) {\n            if (!map.has(arrivalPort)) {\n                map.set(arrivalPort, {\n                    'name': arrivalPort,\n                    'traffic': 1\n                })\n            } else {\n                map.get(arrivalPort).traffic += 1\n            }\n        }\n\n        if (!isPortExcluded(departurePort)) {\n            if (!map.has(departurePort)) {\n                map.set(departurePort, {\n                    'name': departurePort,\n                    'traffic': 1\n                })\n            } else {\n                map.get(departurePort).traffic += 1\n            }\n        }\n    })\n\n    const dataPerPort = Array.from(map.values())\n    dataPerPort.sort(function (a, b) {\n        return b.traffic - a.traffic\n    })\n    return dataPerPort\n}\n\nexport function transformDataMonths(data) {\n    const map = new Map()\n    data.forEach(line => {\n        const departureDate = new Date(line['Departure Date'])\n        departureDate.setDate(1)\n        const arrivalDate = new Date(line['Arrival Date'])\n        arrivalDate.setDate(1)\n\n        for (let date = departureDate; date <= arrivalDate; date.setMonth(date.getMonth()+1)) {\n            const sDate = date.toDateString()\n            if (!map.has(sDate)) {\n                map.set(sDate, {\n                    'date': sDate,\n                    'traffic': 1\n                })\n            } else {\n                map.get(sDate).traffic += 1\n            }\n        }\n    })\n\n    const dataPerMonth = Array.from(map.values())\n    dataPerMonth.forEach(month => {\n        month.date = new Date(month.date)\n    })\n    return dataPerMonth\n}\n\nexport function build(div, dataPerMonth, dataPerPort, nb = 20) {\n    buildTable(div, dataPerPort, nb)\n\n    const xScale = d3.scaleBand().padding(0.7)\n    xScale.domain(\n        dataPerMonth.map((month) => month.date))\n    .range([0, 950])\n\n    const yScale = d3.scaleLinear()\n    let max = 0\n    for (const month of dataPerMonth) {\n        if (month.traffic > max) {\n            max = month.traffic\n        }\n    }\n    yScale.domain([0, max]).range([125, 0])\n\n    div.select('#time-select-graph  #graph-clip-path')\n    .selectAll('rect')\n    .data(dataPerMonth)\n    .join('rect')\n    .attr('width', 950 / dataPerMonth.length)\n    .attr('height', data => 125 - yScale(data.traffic))\n    .attr('x', data => xScale(data.date))\n    .attr('y', data => yScale(data.traffic))\n\n    div.select('#time-select-graph')\n    .select('.x.axis')\n    .attr('transform', 'translate(0, ' + 125 + ')')\n    .call(d3.axisBottom(xScale)\n    .tickValues(xScale.domain().filter(function(d, i) {\n        return !(i % 12 - 1)\n    }))\n    .tickFormat(d3.timeFormat(\"%Y\")))\n}\n\nexport function buildTable(div, dataPerPort, nb) {\n    const topTraffic = dataPerPort[0].traffic\n\n    const row = div.select('#port-table tbody')\n    .selectAll('tr.port-row')\n    .data(dataPerPort)\n    .enter()\n    .filter((data, index) => nb <= 0 || index < nb)\n    .append('tr')\n    .attr('data-port', (data, index) => data.name)\n\n    row.append('td')\n    .attr('class', 'port-cell column-rank')\n    .append('div')\n    .attr('class', 'rank-container')\n    .append('span')\n    .text((data, index) => index + 1)\n\n    row.append('td')\n    .attr('class', 'port-cell column-port')\n    .append('div')\n    .attr('class', 'port-container')\n    .append('span')\n    .text((data, index) => data.name)\n\n    row.append('td')\n    .attr('class', 'port-cell column-traffic')\n    .append('div')\n    .attr('class', 'traffic-container')\n    .append('span')\n    .text((data, index) => data.traffic)\n\n    row.append('td')\n    .attr('class', 'port-cell-graph column-proportions')\n    .append('div')\n    .attr('class', 'proportions-container')\n    .style('width', (data, index) => data.traffic / topTraffic * 100 + '%')\n    \n    div.selectAll('#port-table tr').on('click', function() {\n        const row = d3.select(this)\n        const selected = row.classed('selected')\n\n        d3.selectAll('#port-table tr').classed('selected', false)\n        row.classed('selected', !selected)\n\n        const port = selected ? undefined : row.attr('data-port')\n\n        selectPort(port)\n    })\n}\n\nd3.select('#tab-2-content #row-nb-control-refresh').on('click', function() {\n    reset(d3.select('#tab-2-content'))\n    const nbLines = d3.select('#row-nb-control').property('value')\n    build(d3.select('#tab-2-content'), dataPerMonth, dataPerPort, nbLines)\n})\n\nexport function reset(div) {\n    div.select('#port-table tbody').html('')\n    selectPort(undefined)\n}\n\nexport function selectPort(port) {\n    const title = d3.select('#caracteristics-title-port')\n    if (port == undefined) {\n        title.text('AUCUN PORT SÉLECTIONNÉ - CARACTÉRISTIQUES GLOBALES')\n    } else {\n        title.text(port)\n    }\n}\n\nexport function setHistogram(data, max, width, height, id, title) {\n    var svg = d3.select(id)\n        .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n        .append(\"g\")\n            .attr(\"transform\", \"translate(50,10)\");\n\n    var x = d3.scaleLinear()\n        .domain([0, max])\n        .range([0, width - 100]);\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + (height - 30) + \")\")\n        .call(d3.axisBottom(x))\n\n    var hist = d3.histogram()\n        .value(d => { return d[title]; })\n        .domain(x.domain())\n        .thresholds(x.ticks(40));\n\n    var bins = hist(data);\n\n    var y = d3.scaleLinear()\n        .range([height - 30, 0])\n        .domain([0, d3.max(bins, d => { return d.length; })]);\n    svg.append(\"g\")\n        .call(d3.axisLeft(y).ticks(5));\n\n    svg.selectAll(\"rect\")\n        .data(bins)\n        .enter()\n        .append(\"rect\")\n            .attr(\"x\", 1)\n            .attr(\"transform\", d => { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n            .attr(\"width\", d => { return x(d.x1) - x(d.x0); })\n            .attr(\"height\", d => { return height - y(d.length) - 30; })\n            .style(\"fill\", \"#4479AB\")\n}\n\nexport function setHistograms(data) {\n    setHistogram(data, 400, 776, 160, \"#repartition-length\", \"Lenght\");\n    setHistogram(data, 180, 776, 160, \"#repartition-width\", \"Width\")\n    setHistogram(data, 650000, 776, 160, \"#repartition-tonnage\", \"DeadWeight Tonnage\");\n    setHistogram(data, 30, 776, 160, \"#repartition-draught\", \"Maximum Draugth\");\n}\n\nexport function setStackedBar(data) {\n    var svg = d3.select(\"#repartition-types\")\n        .append(\"svg\")\n            .attr(\"height\", 556)\n            .attr(\"width\", 130)\n            .append(\"g\")\n                .attr(\"transform\", \"translate(10,10)\");\n    \n    var total = 0\n    const map = new Map()\n    data.forEach(line => {\n        const type = line['Global Vessel Type']\n        const subtype = line['Vessel Type']\n        total++;\n\n        if (!map.has(type)) {\n            map.set(type, {\n                'type': type,\n                'number': 1,\n                'subtypes': {}\n            })\n        } else {\n            map.get(type).number += 1;\n        }\n            \n        if (!(subtype in map.get(type).subtypes)) {\n            map.get(type).subtypes[subtype] = 1;\n        } else {\n            map.get(type).subtypes[subtype] += 1;\n        }\n    })\n\n    const colors = {\"Barges\": \"#66c2a5\", \"Excursion\": \"#fc8d62\", \"Fishing\": \"#8da0cb\", \"Merchant\": \"#e78ac3\", \"Other\": \"#a6d854\", \"Pleasure Crafts\": \"#ffd92f\", \"Tanker\": \"#e5c494\", \"Tugs\": \"#b3b3b3\"}\n    const darker_colors = {\"Barges\": \"#46b08f\", \"Excursion\": \"#d66236\", \"Fishing\": \"#748cc2\", \"Merchant\": \"#d96aae\", \"Other\": \"#8fbd44\", \"Pleasure Crafts\": \"#d6b313\", \"Tanker\": \"#cfa569\", \"Tugs\": \"#919191\"}\n\n    var currSum = 10\n    for (var type of map.entries()) {\n        var i = 0\n        for (var subtype in type[1].subtypes) {\n            var color_list = i % 2 == 0 ? colors : darker_colors\n            i++\n            svg.append(\"rect\")\n                .attr(\"width\", 130)\n                .attr(\"height\", (Math.ceil(490 * type[1].subtypes[subtype]/total)))\n                .attr(\"transform\", \"translate(10,\" + currSum + \")\")\n                .attr(\"fill\", color_list[type[0]]);\n            currSum += Math.ceil(490 * type[1].subtypes[subtype]/total);\n        }\n    }\n}","export const GLOBAL_VESSEL_TYPE = ['Barges', 'Excursion', 'Fishing', 'Merchant', 'Other', 'Pleasure Crafts', 'Tanker', 'Tugs']\nexport const REGION_NAME = ['Arctic', 'Central', 'East Canadian Water', 'Newfoundland', 'Maritimes', 'Pacific', 'Quebec', 'St. Lawrence Seaway', 'West Canadian Water']\nexport const REGION_COLOR = ['#CAB2D6', '#6A3D9A', '#33A02C', '#FB9A99', '#FDBF6F', '#E31A1C', '#1F78B4', '#A6CEE3', '#FF7F00']\n\nfunction findGlobalVesselType(vesselType) {\n  if (['Barge Bulk Cargo', 'Barge Chemical','Barge Chips','Barge Derrick','Barge General','Barge Log','Barge Miscellaneous','Barge Oil Drilling Rig', 'Barge Oil/Petroleum', 'Barge Rail/Trailer','Barge Self-Propelled','Barge Towed',\"Don't use\",'Landing Craft','Logs Raft Section'].includes(vesselType)) {\n    return 'Barges'\n  } else if (['Excursion Passenger'].includes(vesselType)) {\n    return 'Excursion'\n  } else if (['Crab Boat', 'Dragger (Scallop, Clam, etc.)', 'Factory Ship', 'Fishery Patrol', 'Fishing Vessel', 'Gillnetter', 'Groundfish Boat (Open Boat)', 'Lobster Boat', 'Longliner', 'Other Fishing VSL (Open Boat)', 'Seiner', 'Shrimp Boat', 'Trawler', 'Troller'].includes(vesselType)) {\n    return 'Fishing'\n  } else if (['Cruise', 'Merchant (Dry)', 'Merchant Auto', 'Merchant Bulk', 'Merchant Cement', 'Merchant Coastal', 'Merchant Container', 'Merchant Ferry', 'Merchant General', 'Merchant Lash', 'Merchant Livestock', 'Merchant Ore', 'Merchant Passenger', 'Merchant Rail/Trailer Ferry', 'Merchant Reefer', 'Merchant RO/RO'].includes(vesselType)) {\n    return 'Merchant'\n  } else if (['Yacht - Pleasure Crafts', 'Yacht Power', 'Yacht Sails'].includes(vesselType)) {\n    return 'Pleasure Crafts'\n  } else if(['Merchant (Tanker)', 'Merchant Chemical', 'Merchant Chemical/Oil Products Tanker','Merchant Crude','Merchant Gasoline','Merchant Liquified Gas','Merchant Molasses','Merchant Ore/Bulk/Oil','Merchant Super Tanker','Merchant ULCC','Merchant VLCC','Merchant Water'].includes(vesselType)) {\n    return 'Tanker'\n  } else if (['Tug', 'Tug Fire', 'Tug Harbour', 'Tug Ocean', 'Tug Supply', 'Tugs Workboat'].includes(vesselType)) {\n    return 'Tugs'\n  } else {\n    return 'Other'\n  }\n}\n\nexport function clean(data) {\n  const cleanData = []\n  data.forEach(element => {\n    if (element['Lenght'] != 0 && \n        element['Width'] != 0 & \n        element['Maximum Draugth'] < 30 &&\n        element['Departure Date'] < ['Arrival Date']) {\n      cleanData.push({\n        'Arrival Date': element['Arrival Date'].substring(0,10),\n        'Arrival Hardour': element['Arrival Hardour'],\n        'Arrival Region': element['Arrival Region'],\n        'DeadWeight Tonnage': element['DeadWeight Tonnage'],\n        'Departure Date': element['Departure Date'].substring(0, 10),\n        'Departure Hardour': element['Departure Hardour'],\n        'Departure Region': element['Departure Region'],\n        'Lenght': element['Lenght'],\n        'Maximum Draugth': element['Maximum Draugth'],\n        'Vessel Type': element['Vessel Type'],\n        'Global Vessel Type': findGlobalVesselType(element['Vessel Type']),\n        'Width': element['Width']\n      })\n    }\n  })\n\n  return cleanData\n}\n\nexport function chordMatrix(data, departureDate, arrivalDate) {\n  const matrix = new Array(REGION_NAME.length)\n  for (let index = 0; index < matrix.length; index++) {\n    matrix[index] = new Array(REGION_NAME.length)\n  }\n  \n  REGION_NAME.forEach((departureRegion, i) => {\n    REGION_NAME.forEach((arrivalRegion, j) => {\n      matrix[i][j] = data\n        .filter((d) => {\n          return departureRegion === d['Departure Region'].slice(0,-7)\n            && arrivalRegion === d['Arrival Region'].slice(0,-7)\n            && departureDate <= d['Departure Date']\n            && arrivalDate >= d['Arrival Date']\n        })\n        .map((value) => value.count)\n        .reduce((partialSum, v) => Number(partialSum) + Number(v), 0)\n    })\n  })\n\n  return matrix\n}","import * as preproc from './preprocess.js'\n\nexport function build(div) {\n  buildHeatmap(div)\n}\n\n// https://d3-graph-gallery.com/heatmap.html\nfunction buildHeatmap(div) {\n  // TODO : adapt to div size\n\n  // set the dimensions and margins of the graph\n  const margin = {top: 30, right: 0, bottom: 70, left: 120},\n    width = 500 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  const svg = div.select(\"#tab-3-heatmap\")\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n  // Labels of row and columns\n  const myGroups = preproc.GLOBAL_VESSEL_TYPE\n  const myVars = preproc.REGION_NAME\n\n  // Build X scales and axis:\n  const x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(myGroups)\n    .padding(0.01)\n\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x))\n    .selectAll('text')\n    .attr('transform', 'translate(-20,20)rotate(-45)')\n\n  // Build Y scales and axis:\n  const y = d3.scaleBand()\n    .range([ height, 0 ])\n    .domain(myVars)\n    .padding(0.01)\n  svg.append(\"g\")\n    .call(d3.axisLeft(y))\n\n  // Build color scale\n  const myColor = d3.scaleLinear()\n    .range([\"white\", \"#ff0000\"])\n    .domain([0,15]) //maximum hardocodé sur la valeur max\n\n\n  function transformData(d, departureDate, arrivalDate) {\n    let map = heatmapMap()\n\n    d.forEach(line => {\n      if (departureDate <= d['Departure Date'] && arrivalDate >= d['Arrival Date']) return;\n\n      const keyStart = line['Departure Region']+line['Global Vessel Type'];\n      const keyStop = line['Arrival Region']+line['Global Vessel Type'];\n      if (!map.has(keyStart)) {\n        map.set(keyStart, {\n          'Region': line['Departure Region'].slice(0,-7),\n          'Type': line['Global Vessel Type'],\n          'count': 1\n          });\n      } else {\n        const current = map.get(keyStart);\n        current.count += 1;\n        map.set(keyStart, current);\n      }\n      if (!map.has(keyStop)) {\n        map.set(keyStop, {\n          'Region': line['Arrival Region'].slice(0,-7),\n          'Type': line['Global Vessel Type'],\n          'count': 1\n          });\n      } else {\n        const current = map.get(keyStop);\n        current.count += 1;\n        map.set(keyStop, current);\n      }\n    })\n\n    const p = [];\n    let max = 0\n    Array.from(map.values()).forEach((value) => {\n      p.push({\n        'Region': value.Region,\n        'Type': value.Type,\n        'count' : (value.count / (2*311859)) * 100    // TODO : Trouver le nombre total de voyage dans la période sélectionnée\n      })\n      if ((value.count / (2*311859)) * 100 >= max) {\n        max = (value.count / (2*311859)) * 100\n      }\n    })\n    myColor.domain([0,max])\n\n    return p\n  }\n\n  //Read the data\n  d3.csv(\"./TRIP_HEATMAP.csv\").then( function(data) {\n    // add the squares and interaction\n    const transformedData = transformData(data, \"2010-01-01\", \"2023-01-01\")\n    svg.selectAll()\n    .data(transformedData, function(d) {\n      return d.Type+':'+d.Region;\n    })\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"square\")\n    .on('mouseenter', function() { rectSelect(this, x, y) })\n    .on('mouseleave', function() { rectUnselect(this) })\n    .append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.Type) })\n      .attr(\"y\", function(d) { return y(d.Region) })\n      .attr(\"width\", x.bandwidth() )\n      .attr(\"height\", y.bandwidth() )\n      .style(\"fill\", function(d) { return myColor(d.count) })\n    \n      initLegend(svg,myColor)\n      drawLegend(margin.left / 2, margin.top + 5, graphSize.height - 10, 15, 'ffffff', myColor)\n  })\n}\n\nfunction heatmapMap() {\n  let map = new Map();\n\n  preproc.REGION_NAME.forEach((region) => {\n    preproc.GLOBAL_VESSEL_TYPE.forEach((type) => {\n      const key = region + type\n      map.set(key, {\n        'Region': region,\n        'Type': type,\n        'count': 0\n      })\n    })\n  })\n  return map\n}\n\nfunction rectSelect(element, x, y) {\n  d3.select(element)\n    .append(\"text\")\n    .attr('x', function(d) { return x(d.Type) + x.bandwidth() / 2; })\n    .attr('y', function(d) { return y(d.Region) + y.bandwidth() / 2; })\n    .attr('text-anchor', 'middle')\n    .attr('dominant-baseline', 'middle')\n    .text(function(d) {\n      return d.count.toFixed(2) + '%'\n    })\n}\n\nfunction rectUnselect(element) {\n  d3.select(element)\n    .select('text')\n    .remove()\n}\n\nfunction initLegend(svg, colorScale) {\n  const defs = svg.append('defs')\n  svg.append('rect').attr('class', 'legend bar')\n  svg.append('g').attr('class', 'legend axis')\n\n  const linearGradient = defs\n  .append('linearGradient')\n  .attr('id', 'gradient')\n  .attr('x1', 0).attr('y1', 1).attr('x2', 0).attr('y2', 0)\n\n  linearGradient.selectAll('stop')\n  .data(colorScale.ticks().map((tick, i, nodes) => (\n    {\n      offset: `${100 * (i / nodes.length)}%`,\n      color: colorScale(tick)\n    })))\n  .join('stop')\n  .attr('offset', d => d.offset)\n  .attr('stop-color', d => d.color)\n}\n\nfunction drawLegend(x, y, height, width, fill, colorScale) {\n  d3.select('.legend.bar')\n    .attr('fill', fill)\n    .attr('x', x)\n    .attr('y', y)\n    .attr('height', height)\n    .attr('width', width)\n    \n  const scale = d3.scaleLinear()\n  .domain(colorScale.domain())\n  .range([height, 0])\n\n  let axis = d3.axisLeft()\n  .ticks(7)\n  .scale(scale);\n\n  d3.select('.legend.axis')\n  .call(axis)\n  .attr('transform', 'translate('+ x + ',' + y + ')')\n}\n","import * as preproc from './preprocess.js'\n\n// https://d3-graph-gallery.com/chord.html\n// https://observablehq.com/@d3/directed-chord-diagram\n// https://jyu-theartofml.github.io/posts/circos_plot\n// http://strongriley.github.io/d3/ex/chord.html\nexport function build(div, data) {\n  // TODO : Comment trouver la taille d'une div encore non chargée ?\n  const bounds = d3.select('#stacked-area-chart').node().getBoundingClientRect()\n\n  var margin = {\n    top: Math.max(bounds.width*0.22, 400), \n    right: bounds.width*0.25, \n    bottom: bounds.width*0.25, \n    left: bounds.width*0.25\n  }, // TODO : Revoir valeur\n  width = bounds.width - margin.left - margin.right,\n  height = bounds.width - margin.top - margin.bottom;\n\n  const innerRadius = bounds.width / 6.5 // TODO : Revoir valeur\n  const outerRadius = innerRadius + 10\n\n  // create the svg area\n  const svg = div.select('#tab-3-chord-diagram')\n  .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // create input data: a square matrix that provides flow between entities\n  const matrix = preproc.chordMatrix(data, \"2010-01-01\", \"2023-01-01\")\n  \n  const colors = preproc.REGION_COLOR\n\n  // give this matrix to d3.chord(): it will calculates all the info we need to draw arc and ribbon\n  const res = d3.chord()\n    .padAngle(0.05)     // padding between entities (black arc)\n    .sortSubgroups(d3.descending)\n    (matrix)\n\n  // add the links between groups\n  const links = svg\n  .datum(res)\n  .append(\"g\")\n  .attr(\"id\", \"links\")\n  .selectAll(\"path\")\n  .data(function(d) { return d; })\n  .enter()\n  .append(\"path\")\n    .attr(\"class\", \"chord\")\n    .on('mouseenter', function({source, target}, _) {\n      console.log(`${preproc.REGION_NAME[source.index]} --> ${preproc.REGION_NAME[source.subindex]} : ${source.value} navires`)\n    })\n    .attr(\"d\", d3.ribbon()\n      .radius(innerRadius)\n    )\n    .style(\"fill\", function(d){ return(colors[d.source.index]) }) // colors depend on the source group. Change to target otherwise.\n    .style(\"stroke\", \"black\")\n    .attr(\"opacity\", 0.5)\n\n  // Version sans ticks :\n  // add the groups on the outer part of the circle\n  svg.datum(res)\n    .append(\"g\")\n    .attr(\"id\", \"groups\")\n    .selectAll(\"g\")\n    .data(function(d) { return d.groups; })\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"group\")\n    .append(\"path\")\n      .style(\"fill\", function(_,i){ return colors[i] })\n      .style(\"stroke\", \"black\")\n      .attr(\"d\", d3.arc()\n        .innerRadius(innerRadius)\n        .outerRadius(outerRadius)\n      )\n      .on(\"mouseover\", function(event, _) {\n        console.log(`Région ${preproc.REGION_NAME[event.index]} (${event.value} navires)`)\n        highlightGroup(event, links)\n      })\n      .on(\"mouseleave\", function() {\n        unhighlightGroup(links)\n      })\n\n  // add the label of groups\n  svg.datum(res)\n    .append(\"g\")\n    .attr(\"id\", \"labels\")\n    .selectAll(\"text\")\n    .data(function(d) { return d.groups; })\n    .enter()\n    .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.startAngle * 180 / Math.PI - 90) + \") translate(\" + outerRadius + \",0)\"; })  // TODO : Revoir valeur\n    .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.startAngle > Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.startAngle > Math.PI ? \"end\" : null; })\n    .style(\"fill\", function(_, i){ return(colors[i]) })\n    .style(\"font-weight\", \"bold\")\n    .text(function(d) { return preproc.REGION_NAME[d.index] })\n\n  /* \n  // Version avec ticks :\n  // this group object use each group of the data.groups object\n  var group = svg\n  .datum(res)\n  .append(\"g\")\n  .selectAll(\"g\")\n  .data(function(d) { return d.groups; })\n  .enter()\n\n  // add the group arcs on the outer part of the circle\n  group.append(\"g\")\n    .append(\"path\")\n    .style(\"fill\", function(_,i){ return colors[i] })\n    .style(\"stroke\", \"black\")\n    .attr(\"d\", d3.arc()\n      .innerRadius(300)\n      .outerRadius(310)\n    )\n\n  // Add the ticks\n  group\n  .selectAll(\".group-tick\")\n  .data(function(d) { return groupTicks(d, 25); })    // Controls the number of ticks: one tick each 25 here.\n  .enter()\n  .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + 305 + \",0)\"; })\n  .append(\"line\")               // By default, x1 = y1 = y2 = 0, so no need to specify it.\n    .attr(\"x2\", 6)\n    .attr(\"stroke\", \"black\")\n\n\n  const tick = 25000\n  // Add the labels of a few ticks:\n  group\n  .selectAll(\".group-tick-label\")\n  .data(function(d) { return groupTicks(d, tick); })\n  .enter()\n  .filter(function(d) { return d.value % tick === 0; })\n  .append(\"g\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + 305 + \",0)\"; })\n  .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.angle > Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.angle > Math.PI ? \"end\" : null; })\n    .text(function(d) { return d.value })\n    .style(\"font-size\", 9)\n  \n  // Returns an array of tick angles and values for a given group and step.\n  function groupTicks(d, step) {\n    var k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(function(value) {\n      return {value: value, angle: value * k + d.startAngle};\n    });\n  }\n  */\n}\n\nfunction highlightGroup(event, links) {\n  links\n    .filter(function(d) { return d.source.index != event.index })\n    .attr(\"opacity\", 0.1)\n}\n\nfunction unhighlightGroup(links) {\n  links.attr(\"opacity\", 0.5)\n}\n\nfunction showTooltip() {}\n\nfunction unshowTooltip() {}\n","import * as onglet1 from './scripts/onglet1.js'\nimport * as onglet2 from './scripts/onglet2.js'\nimport * as onglet3 from './scripts/onglet3.js'\nimport * as chord from './scripts/chord.js'\n\n(function (d3) {\n    onglet1.build(d3.select('#tab-1-content'))\n    // onglet2.build(d3.select('#tab-2-content'))\n    // onglet3.build(d3.select('#tab-3-content'))\n\n    // d3.csv('./TRIP_V1.csv', d3.autoType).then((data) => {   \n    //     onglet1.build(d3.select('#tab-1-content'))\n    // })\n\n    // window.addEventListener('resize', () => {\n    //    onglet1.rebuild(d3.select('#tab-1-content'))\n    // })\n\n    d3.csv('./TRIP_CHORD.csv').then(function(chordData) {\n        chord.build(d3.select('#tab-3-content'), chordData)\n    })\n\n    onglet3.build(d3.select('#tab-3-content'))\n\n    // TODO : Resize automatique ?\n\n})(d3)\n\n$('.tab-button').click(function () {\n    if (!$(this).hasClass('tab-button-active')) {\n        const tab = $(this).data('tab')\n    \n        $('button.tab-button').removeClass('tab-button-active')\n        $(this).addClass('tab-button-active')\n    \n        $('.tab-content').removeClass('visible-tab')\n        $(`.tab-content#tab-${tab}-content`).addClass('visible-tab')\n    }\n})"]}